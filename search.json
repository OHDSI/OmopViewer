[{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://ohdsi.github.io/OmopViewer/articles/background.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Edit the landing page of your shiny","text":"landing page (background) triggered background = TRUE argument used exportStaticApp() function. background set TRUE ‘background’ panel added default ‘background.md’ file created. content ‘background’ panel always card generated backgroundCard() function using content ‘background.md’. vignette going show different options populate ‘background.md’ file.","code":"library(OmopViewer)  # this functions will be copied in your shiny folder source(system.file(\"functions.R\", package = \"OmopViewer\"))"},{"path":"https://ohdsi.github.io/OmopViewer/articles/background.html","id":"general-markdown-behaviour","dir":"Articles","previous_headings":"","what":"General markdown behaviour","title":"Edit the landing page of your shiny","text":"markdown part compiled using function markdown::markdownToHTML(), anything supported function can included markdown part. commonly used markdown functionalities : # titles ## subtitles ### third level titles, … ![](image.png) add images. Remember root folder ‘shiny/www/’ *...* italic text. **...** bold text. - bullet points. simple example: shiny contains information : B C ohdsi logo:","code":"# Introduction  This shiny *contains information* on:  - A - B - C  ## Images  The **ohdsi** logo: ![]('ohdsi_logo.svg'){width=100px}"},{"path":"https://ohdsi.github.io/OmopViewer/articles/background.html","id":"populate-yaml-part","dir":"Articles","previous_headings":"","what":"Populate yaml part","title":"Edit the landing page of your shiny","text":"can add metadata markdown using yaml top. need put metadata ---: yaml metadata can contain two types information: keywords add elements card. arguments bslib::card function.","code":"--- YAML CONTENT ---  BODY CONTENT"},{"path":"https://ohdsi.github.io/OmopViewer/articles/background.html","id":"keywords","dir":"Articles","previous_headings":"Populate yaml part","what":"Keywords","title":"Edit the landing page of your shiny","text":"following keywords can used edit bslib::card() content: Function column states function triggered. Let’s see add header footer card: bla bla bla bla…","code":"--- header: \"Card header\" footer: \"Some extra information\" --- # Introduction  bla bla bla bla..."},{"path":"https://ohdsi.github.io/OmopViewer/articles/background.html","id":"bslibcard-arguments","dir":"Articles","previous_headings":"Populate yaml part","what":"bslib::card() arguments","title":"Edit the landing page of your shiny","text":"can control arguments bslib::card() using metadata included yaml file. include metadata background.md file. can check documentation bslib::card(), supported arguments can populated using values (calls functions): full_screen height max_height min_height fill class id example: shiny contains information : B C Let’s see html can see id class populated:","code":"---- header: \"My custom card\" id: \"my_custom_id\" # this can be later used in the css class: \"my_custom_class\" # this can be later used in the css height: 100px ---- # Introduction  This shiny *contains information* on:  - A - B - C #> <div class=\"card bslib-card bslib-mb-spacing bslib-card-input html-fill-item html-fill-container my_custom_class\" data-bslib-card-init data-require-bs-caller=\"card()\" data-require-bs-version=\"5\" id=\"my_custom_id\" style=\"height:200px;\"> #>   <div class=\"card-header\">My custom card<\/div> #>   <div class=\"card-body bslib-gap-spacing html-fill-item html-fill-container\" style=\"margin-top:auto;margin-bottom:auto;flex:1 1 auto;\"><h1 id=\"introduction\">Introduction<\/h1> #> <p>This shiny <em>contains information<\/em> on:<\/p> #> <ul> #> <li>A<\/li> #> <li>B<\/li> #> <li>C<\/li> #> <\/ul> #> <\/div> #>   <script data-bslib-card-init>bslib.Card.initializeAllCards();<\/script> #> <\/div>"},{"path":"https://ohdsi.github.io/OmopViewer/articles/dynamic_app.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Dynamic app","text":"vignette shows visualise results dynamically Shiny apps using OmopViewer package. dynamic shiny apps allow little customisation deployable editable, seek flexible approach please see Static app vignette.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/articles/dynamic_app.html","id":"dynamic-app","dir":"Articles","previous_headings":"","what":"Dynamic app","title":"Dynamic app","text":"launch dynamic app please use following command: Use Upload data upload csv result exported using exportSummarisedResult() click button Bind data load shiny create panels uploaded data. One panel created per summarised result. can easily navigate thought different tabs see whats data.","code":"library(OmopViewer) launchDynamicApp()"},{"path":"https://ohdsi.github.io/OmopViewer/articles/edit_static_content.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Customise your static shiny","text":"vignette see edit panelDetails object one level customisation.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/articles/edit_static_content.html","id":"load-packages","dir":"Articles","previous_headings":"Introduction","what":"Load packages","title":"Customise your static shiny","text":"","code":"library(OmopViewer) library(dplyr, warn.conflicts = FALSE) library(omopgenerics, warn.conflicts = FALSE)"},{"path":"https://ohdsi.github.io/OmopViewer/articles/edit_static_content.html","id":"mock-data","dir":"Articles","previous_headings":"Introduction","what":"Mock data","title":"Customise your static shiny","text":"use incidence results obtained package, can subset reuslts using following command: can see contains data different settings: case create two incidence tabs one Male data another one Female data, starting point default incidence tab, can ibtain using: just producing results: can define panelDetails object using: moment thing create two panels incidence, information, first thing restrict corresponding data one panels: can now example edit title: icons: Let’s create shiny see looks like: can example remove tidy panel female tab plot panel male tab like : Finally remove filter denominator_sex panels: can now regenerate shiny see changes effective:","code":"result <- omopViewerResults |>    filterSettings(result_type == \"incidence\") result |>   settings() |>   glimpse() #> Rows: 18 #> Columns: 20 #> $ result_id                            <int> 19, 20, 21, 22, 23, 24, 25, 26, 2… #> $ result_type                          <chr> \"incidence\", \"incidence\", \"incide… #> $ package_name                         <chr> \"IncidencePrevalence\", \"Incidence… #> $ package_version                      <chr> \"1.2.0\", \"1.2.0\", \"1.2.0\", \"1.2.0… #> $ group                                <chr> \"denominator_cohort_name &&& outc… #> $ strata                               <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"… #> $ additional                           <chr> \"incidence_start_date &&& inciden… #> $ min_cell_count                       <chr> \"5\", \"5\", \"5\", \"5\", \"5\", \"5\", \"5\"… #> $ analysis_censor_cohort_name          <chr> \"None\", \"None\", \"None\", \"None\", \"… #> $ analysis_complete_database_intervals <chr> \"TRUE\", \"TRUE\", \"TRUE\", \"TRUE\", \"… #> $ analysis_outcome_washout             <chr> \"365\", \"365\", \"365\", \"365\", \"365\"… #> $ analysis_repeated_events             <chr> \"FALSE\", \"FALSE\", \"FALSE\", \"FALSE… #> $ denominator_age_group                <chr> \"0 to 150\", \"0 to 150\", \"0 to 150… #> $ denominator_days_prior_observation   <chr> \"365\", \"365\", \"365\", \"365\", \"365\"… #> $ denominator_end_date                 <chr> \"2009-12-31\", \"2009-12-31\", \"2009… #> $ denominator_requirements_at_entry    <chr> \"FALSE\", \"FALSE\", \"FALSE\", \"FALSE… #> $ denominator_sex                      <chr> \"Both\", \"Female\", \"Male\", \"Both\",… #> $ denominator_start_date               <chr> \"2000-01-01\", \"2000-01-01\", \"2000… #> $ denominator_target_cohort_name       <chr> \"None\", \"None\", \"None\", \"None\", \"… #> $ denominator_time_at_risk             <chr> \"0 to Inf\", \"0 to Inf\", \"0 to Inf… getPanel(\"incidence\") #> Incidence (OmopViewer panel) #> •  icon: chart-line #> •  data: result_type: <incidence> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Incidence (gt); Plot Incidence (ui); Plot population (ui) panelDetailsFromResult(result = result) #> $incidence #> Incidence (OmopViewer panel) #> •  icon: chart-line #> •  data: result_type: <incidence> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Incidence (gt); Plot Incidence (ui); Plot population (ui) panelDetails <- list(   incidence_female = getPanel(\"incidence\"),   incidence_male = getPanel(\"incidence\") ) panelDetails$incidence_female$data <- list(denominator_sex = \"Female\") panelDetails$incidence_male$data <- list(denominator_sex = \"Male\") panelDetails$incidence_female$title <- \"Incidence in Female\" panelDetails$incidence_male$title <- \"Incidence in Male\" panelDetails$incidence_female$icon <- \"venus\" panelDetails$incidence_male$icon <- \"mars\" exportStaticApp(result = result, panelDetails = panelDetails, directory = tempdir()) panelDetails$incidence_female$content$tidy <- NULL panelDetails$incidence_male$content$plot <- NULL panelDetails$incidence_female$exclude_filters <- c(panelDetails$incidence_female$exclude_filters, \"denominator_sex\") panelDetails$incidence_male$exclude_filters <- c(panelDetails$incidence_male$exclude_filters, \"denominator_sex\") exportStaticApp(result = result, panelDetails = panelDetails, directory = tempdir())"},{"path":"https://ohdsi.github.io/OmopViewer/articles/export_static_app.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Create a static shiny app","text":"vignette shows create static Shiny apps using OmopViewer package. static shiny apps separated projects ui, server, global files pre-process results later can easily later customised deployed. functionality adequate willing deploy shiny, customise later /able access shiny app future. want visualise data briefly need access shiny future, edit deploy maybe Dynamic app functionality searching .","code":""},{"path":"https://ohdsi.github.io/OmopViewer/articles/export_static_app.html","id":"loading-necessary-libraries-and-data","dir":"Articles","previous_headings":"","what":"Loading Necessary Libraries and Data","title":"Create a static shiny app","text":"vignette use simply packages: ’ll use omopViewerResults mock data package illustration:","code":"library(OmopViewer) library(omopgenerics, warn.conflicts = FALSE) library(shiny) # Inspect the structure of the sample data summary(omopViewerResults) #> A summarised_result object with 39307 rows, 96 different result_id, 1 different #> cdm names, and 44 settings. #> CDM names: synthea-covid19-200k. #> Settings: result_type, package_name, package_version, group, strata, #> additional, min_cell_count, analysis, analysis_censor_cohort_name, #> analysis_complete_database_intervals, analysis_full_contribution, #> analysis_outcome_washout, analysis_repeated_events, analysis_type, censor_date, #> cohort_definition_id, cohort_table_name, denominator_age_group, …, type, and #> unknown_indication_table."},{"path":"https://ohdsi.github.io/OmopViewer/articles/export_static_app.html","id":"subsetting-the-data","dir":"Articles","previous_headings":"","what":"Subsetting the Data","title":"Create a static shiny app","text":"example, ’ll use subset data containing specific result types: filters omopViewerResults data include entries result_type one “summarise_omop_snapshot”, “summarise_characteristics”, “incidence”.","code":"result <- omopViewerResults |>   filterSettings(     result_type %in% c(\"summarise_omop_snapshot\", \"summarise_characteristics\", \"incidence\")   ) summary(result) #> A summarised_result object with 1245 rows, 20 different result_id, 1 different #> cdm names, and 20 settings. #> CDM names: synthea-covid19-200k. #> Settings: result_type, package_name, package_version, group, strata, #> additional, min_cell_count, analysis_censor_cohort_name, #> analysis_complete_database_intervals, analysis_outcome_washout, #> analysis_repeated_events, denominator_age_group, #> denominator_days_prior_observation, denominator_end_date, #> denominator_requirements_at_entry, denominator_sex, denominator_start_date, #> denominator_target_cohort_name, denominator_time_at_risk, and table_name."},{"path":"https://ohdsi.github.io/OmopViewer/articles/export_static_app.html","id":"generating-the-shiny-app","dir":"Articles","previous_headings":"","what":"Generating the Shiny App","title":"Create a static shiny app","text":"exportStaticApp function generates Shiny app prepared data. Using default parameters, requires directory save app processed data ( object): Note default executed interactive environment like R Studio project opened separated window. Use open = FALSE wish open shiny app generating .","code":"dir <- tempdir() exportStaticApp(result = result, directory = dir) #> ℹ Processing data #> ✔ Data processed: 3 panels idenfied: `summarise_omop_snapshot`, #>   `summarise_characteristics`, and `incidence`. #> ℹ Creating shiny from provided data #> ✔ Shiny created in: /tmp/Rtmp3Xs31K/shiny"},{"path":"https://ohdsi.github.io/OmopViewer/articles/export_static_app.html","id":"generated-shiny-app","dir":"Articles","previous_headings":"Generating the Shiny App","what":"Generated shiny app","title":"Create a static shiny app","text":"See created new project shiny specified directory along files: background.R generated background argument set TRUE used customise landing page shiny app. data folder contains raw result object results.csv script process data preprocess.R. funcitons.R contains several functions used internally shiny app. global.R, ui.R, server.R define shiny app . www contains images logos used shiny app, default hds_logo.svg ohdsi_logo.svg.","code":"cat(list.files(path = here::here(dir, \"shiny\"), recursive = TRUE), sep = \"\\n\") #> background.md #> data/preprocess.R #> data/results.csv #> functions.R #> global.R #> server.R #> shiny.Rproj #> ui.R #> www/hds_logo.svg #> www/ohdsi_logo.svg"},{"path":"https://ohdsi.github.io/OmopViewer/articles/export_static_app.html","id":"panels-generated-paneldetails","dir":"Articles","previous_headings":"","what":"Panels generated (panelDetails)","title":"Create a static shiny app","text":"shiny generated contained total 3 panels, determined argument panelDetails. element panelDetails used create different panel shiny app. package contains total 28 predefined panels: panel associated determined result_type showed print. default, function panelDetailsFromResult() groups results result_type displays result_type separate panel, pre-build panel exist result_type default panel used. case pre-build panels :","code":"omopViewerPanels #> $summarise_omop_snapshot #> Snapshot (OmopViewer panel) #> •  icon: clipboard-list #> •  data: result_type: <summarise_omop_snapshot> #> •  filters: 1 filters + 1 automatic filters #> •  content: Tidy (DT); Table Snapshot (gt) #>  #> $summarise_observation_period #> Observation period (OmopViewer panel) #> •  icon: eye #> •  data: result_type: <summarise_observation_period> #> •  filters: 1 filters + 4 automatic filters #> •  content: Tidy (DT); Table Observation period (gt); Plot Observation period (ui) #>  #> $summarise_clinical_records #> Clinical records (OmopViewer panel) #> •  icon: bars-staggered #> •  data: result_type: <summarise_clinical_records> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Clinical records (gt) #>  #> $summarise_record_count #> Record count (OmopViewer panel) #> •  icon: signal #> •  data: result_type: <summarise_record_count> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Plot record count (ui) #>  #> $summarise_missing_data #> Missing data (OmopViewer panel) #> •  icon: circle-exclamation #> •  data: result_type: <summarise_missing_data> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Missing data (gt) #>  #> $summarise_in_observation #> In Observation (OmopViewer panel) #> •  icon: explosion #> •  data: result_type: <summarise_in_observation> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Plot in observation (ui) #>  #> $orphan_code_use #> Orphan codes (OmopViewer panel) #> •  icon: magnifying-glass-arrow-right #> •  data: result_type: <orphan_code_use> #> •  filters: 1 filters + 4 automatic filters #> •  content: Tidy (DT); Table Orphan codes (gt) #>  #> $cohort_code_use #> Cohort code use (OmopViewer panel) #> •  icon: chart-column #> •  data: result_type: <cohort_code_use> #> •  filters: 1 filters + 4 automatic filters #> •  content: Tidy (DT); Table Cohort code use (gt) #>  #> $code_use #> Code use (OmopViewer panel) #> •  icon: chart-column #> •  data: result_type: <code_use> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Code use (gt) #>  #> $achilles_code_use #> Achilles code use (OmopViewer panel) #> •  icon: chart-column #> •  data: result_type: <achilles_code_use> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Achilles code use (gt) #>  #> $unmapped_codes #> Unmapped codes (OmopViewer panel) #> •  icon: chart-column #> •  data: result_type: <unmapped_codes> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Unmapped codes (gt) #>  #> $summarise_cohort_overlap #> Cohort Overlap (OmopViewer panel) #> •  icon: circle-half-stroke #> •  data: result_type: <summarise_cohort_overlap> #> •  filters: 1 filters + 5 automatic filters #> •  content: Tidy (DT); Table Overlap (gt); Plot Overlap (ui) #>  #> $summarise_cohort_count #> Cohort Count (OmopViewer panel) #> •  icon: users #> •  data: result_type: <summarise_cohort_count> #> •  filters: 1 filters + 4 automatic filters #> •  content: Tidy (DT); Table Counts (gt); Plot Counts (ui) #>  #> $summarise_cohort_attrition #> Cohort Attrition (OmopViewer panel) #> •  icon: layer-group #> •  data: result_type: <summarise_cohort_attrition> #> •  filters: 1 filters + 2 automatic filters #> •  content: Tidy (DT); Table Attrition (gt); Diagram (grViz) #>  #> $summarise_cohort_timing #> Cohort Timing (OmopViewer panel) #> •  icon: chart-simple #> •  data: result_type: <summarise_cohort_timing> #> •  filters: 1 filters + 2 automatic filters #> •  content: Tidy (DT); Table Timing (gt); Plot Timing (ui) #>  #> $summarise_characteristics #> Cohort Characteristics (OmopViewer panel) #> •  icon: users-gear #> •  data: result_type: <summarise_characteristics> #> •  filters: 1 filters + 4 automatic filters #> •  content: Tidy (DT); Table Characteristics (gt); Plot Characteristics (ui) #>  #> $summarise_large_scale_characteristics #> Large Scale Characteristics (OmopViewer panel) #> •  icon: arrow-up-right-dots #> •  data: result_type: <summarise_large_scale_characteristics> #> •  filters: 1 filters + 4 automatic filters #> •  content: Table (reactable); Most common codes (gt); Plot Compared (plotly) #>  #> $incidence #> Incidence (OmopViewer panel) #> •  icon: chart-line #> •  data: result_type: <incidence> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Incidence (gt); Plot Incidence (ui); Plot population (ui) #>  #> $incidence_attrition #> Incidence Attrition (OmopViewer panel) #> •  icon: layer-group #> •  data: result_type: <incidence_attrition> #> •  filters: 1 filters + 2 automatic filters #> •  content: Tidy (DT); Table Incidence Attrition (gt) #>  #> $prevalence #> Prevalence (OmopViewer panel) #> •  icon: chart-column #> •  data: result_type: <prevalence> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Prevalence (gt); Plot Prevalence (ui); Plot population (ui) #>  #> $prevalence_attrition #> Prevalence Attrition (OmopViewer panel) #> •  icon: layer-group #> •  data: result_type: <prevalence_attrition> #> •  filters: 1 filters + 2 automatic filters #> •  content: Tidy (DT); Table Prevalence Attrition (gt) #>  #> $summarise_dose_coverage #> Dose coverage (OmopViewer panel) #> •  icon: pills #> •  data: result_type: <summarise_dose_coverage> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Dose coverage (gt) #>  #> $summarise_proportion_of_patients_covered #> Proportion of patients covered (OmopViewer panel) #> •  icon: chart-gantt #> •  data: result_type: <summarise_proportion_of_patients_covered> #> •  filters: 1 filters + 3 automatic filters #> •  content: Tidy (DT); Table PPC (gt); Plot PPC (ui) #>  #> $summarise_drug_restart #> Drug Restart (OmopViewer panel) #> •  icon: chart-gantt #> •  data: result_type: <summarise_drug_restart> #> •  filters: 1 filters + 3 automatic filters #> •  content: Tidy (DT); Table Drug Restart (gt); Plot Drug Restart (ui) #>  #> $summarise_drug_utilisation #> Drug Utilisation (OmopViewer panel) #> •  icon: capsules #> •  data: result_type: <summarise_drug_utilisation> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Drug Utilisation (gt); Plot Drug Utilisation (ui) #>  #> $summarise_indication #> Indication (OmopViewer panel) #> •  icon: disease #> •  data: result_type: <summarise_indication> #> •  filters: 1 filters + 7 automatic filters #> •  content: Tidy (DT); Table Indication (gt); Plot Indication (ui) #>  #> $summarise_treatment #> Treatments (OmopViewer panel) #> •  icon: disease #> •  data: result_type: <summarise_treatment> #> •  filters: 1 filters + 7 automatic filters #> •  content: Tidy (DT); Table Treatments (gt); Plot Treatment (ui) #>  #> $default #> <result_type> (OmopViewer panel) #> •  icon: folder #> •  data: -no data- #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table (gt) panelDetailsFromResult(result = result) #> $summarise_omop_snapshot #> Snapshot (OmopViewer panel) #> •  icon: clipboard-list #> •  data: result_type: <summarise_omop_snapshot> #> •  filters: 1 filters + 1 automatic filters #> •  content: Tidy (DT); Table Snapshot (gt) #>  #> $summarise_characteristics #> Cohort Characteristics (OmopViewer panel) #> •  icon: users-gear #> •  data: result_type: <summarise_characteristics> #> •  filters: 1 filters + 4 automatic filters #> •  content: Tidy (DT); Table Characteristics (gt); Plot Characteristics (ui) #>  #> $incidence #> Incidence (OmopViewer panel) #> •  icon: chart-line #> •  data: result_type: <incidence> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Incidence (gt); Plot Incidence (ui); Plot population (ui)"},{"path":"https://ohdsi.github.io/OmopViewer/articles/export_static_app.html","id":"understanding-panel-details-paneldetails","dir":"Articles","previous_headings":"Panels generated (panelDetails)","what":"Understanding Panel Details (panelDetails)","title":"Create a static shiny app","text":"panel’s entry contains key information: Icon: Defines icon displayed next panel, helping visually distinguish different types panels (e.g., clipboard-list, chart-line …). Data: fields used data passed filterSettings() function determine data included panel. Usually result_type common way (e.g. panelDetails$data <- list(result_type = \"incidence\")), fields can used example: panelDetails$data <- list(result_type = \"incidence\", denominator_age_group = c(\"0 19\", \"20 39\")) include results obtained following code: Filters: Filters (filters + automatic_filters) allow users refine results within panel. panel defaults. example, default incidence panel includes automatic_filters: “settings”, “variable_name” filters: “cdm_name”. means field column settings, variable_name cdm_name columns. Content: Defines types content displayed panel, tables (DT, gt, reactable, …) plots (ui, ggplot2, plotly, …). example, summarise_omop_snapshot panel includes table displaying snapshot data gt table generated snapshot data. elements - icon, data, filters, content - can customised user needed. See details customised_panels vignette.","code":"result |>   filterSettings(     result_type == \"incidence\" &        denominator_age_group %in% c(\"0 to 19\", \"20 to 39\")   )"},{"path":"https://ohdsi.github.io/OmopViewer/articles/export_static_app.html","id":"panel-structure-omopviewerpanels","dir":"Articles","previous_headings":"","what":"Panel Structure (omopViewerPanels)","title":"Create a static shiny app","text":"arrangement panels within app controlled panelStructure variable. variable determines panels grouped logical sections tabs within Shiny app. default, different panels grouped package produced result object. case OmopSketch, CohortCharacteristics IncidencePrevalence respectively.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/articles/export_static_app.html","id":"customise-panelstructure","dir":"Articles","previous_headings":"Panel Structure (omopViewerPanels)","what":"Customise panelStructure","title":"Create a static shiny app","text":"custom panelStructure groups “summarise_omop_snapshot” “incidence” result types together grp_1, placing “summarise_characteristics” result type grp_2. can pass custom structure exportStaticApp organize panels according preference.","code":"ps1 <- list(   grp_1 = c(\"summarise_omop_snapshot\", \"incidence\"),   grp_2 = c(\"summarise_characteristics\") )  exportStaticApp(result = result, directory = tempdir(), panelStructure = ps1)"},{"path":"https://ohdsi.github.io/OmopViewer/articles/extending_omopviewer.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Extending OmopViewer","text":"yo want OmopViewer support packages? developer focused vignette explaining process add new default panels package.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/articles/extending_omopviewer.html","id":"what-lives-in-panels-r","dir":"Articles","previous_headings":"","what":"1 What lives in panels.R","title":"Extending OmopViewer","text":"panels.R builds one list – omopViewerPanels – package ships data. Every element list panel definition. ’ve read vignette - Panels defined OmopViewer - ’ve already seen structure action. ’s quick recap:","code":"str(omopViewerPanels$summarise_omop_snapshot, max.level = 2) #> List of 6 #>  $ title            : chr \"Snapshot\" #>  $ icon             : chr \"clipboard-list\" #>  $ data             :List of 1 #>   ..$ result_type: chr \"summarise_omop_snapshot\" #>  $ automatic_filters: chr \"variable_name\" #>  $ filters          :List of 1 #>   ..$ cdm_name:List of 7 #>  $ content          :List of 2 #>   ..$ tidy :List of 6 #>   ..$ table:List of 5 #>  - attr(*, \"class\")= chr \"omopviewer_panel\""},{"path":"https://ohdsi.github.io/OmopViewer/articles/extending_omopviewer.html","id":"add-a-new-panel","dir":"Articles","previous_headings":"","what":"2 Add a new panel","title":"Extending OmopViewer","text":"Edit panels.R “panels” block. use SamplePkg::tablefunction SamplePkg::plotfunction placeholder plot table functions developer add. Key points developers Always add table plot nodes (unless package really plot). Use standard helper objects: tidyContent, rankTableButton(), downloadGtTable(), downloadPlot(). Place new list omopViewerPanels <- list(...) block, register : Run devtools::load_all(); static viewer now include Custom. Commit, tag, release. Done.","code":"## my custom summary ---- myCustomPanel <- list(   # --- metadata -----------------------------------------------------------   title  = \"My Custom\",   icon   = \"wand-magic-sparkles\",   data   = list(result_type = \"summarise_my_custom\"),   automatic_filters = c(\"group\", \"strata\", \"variable_name\", \"settings\"),   filters = list(cdm_name = cdmFilter),      # --- UI tabs ------------------------------------------------------------   content = list(     tidy = tidyContent,          table = list(       title       = \"Table Sample\",       output_type = \"gt\",       reactive    = \"<filtered_data> |> SamplePkg::tablefunction(\",       render      = \"<reactive_data>\",       filters = rankTableButton(         none        = c(\"<strata>\", \"estimate_name\"),         header      = \"variable_name\",         groupColumn = \"cdm_name\",         hide        = \"variable_level\"       ),       download = downloadGtTable(\"table_sample\")     ),          plot = list(       title       = \"Plot Sample\",       output_type = \"ui\",       reactive    = \"<filtered_data> |> SamplePkg::plotfunction(facet = input$facet)\",       render      = \"renderInteractivePlot(<reactive_data>, input$interactive)\",       filters = list(         interactive = list(           button_type = \"materialSwitch\",           label = \"Interactive\",           value = TRUE         ),         facet = list(           button_type = \"pickerInput\",           label = \"Facet\",           choices = c(             'cdm_name', '<group>', '<strata>', '<additional>', '<settings>'           ),           selected = 'cdm_name',           multiple = TRUE         )       ),       download = downloadPlot(\"plot_sample.png\")     )   ) ) omopViewerPanels <- list(   # existing entries …   summarise_my_custom = myCustomPanel,   # default   default = defaultPanel ) |> purrr::map(\\(x) newOmopViewerPanel(x))"},{"path":"https://ohdsi.github.io/OmopViewer/articles/theming.html","id":"predefined-themes","dir":"Articles","previous_headings":"","what":"Predefined themes","title":"Theming your shiny","text":"See predefined themes:","code":""},{"path":"https://ohdsi.github.io/OmopViewer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martí Català. Author, maintainer. Yuchen Guo. Author. Edward Burn. Contributor. Nuria Mercade-Besora. Contributor. Elin Rowlands. Contributor. Cecilia Campanile. Contributor.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Català M, Guo Y (2025). OmopViewer: Visualise OMOP Results using 'shiny' Applications. R package version 0.4.0, https://ohdsi.github.io/OmopViewer/.","code":"@Manual{,   title = {OmopViewer: Visualise OMOP Results using 'shiny' Applications},   author = {Martí Català and Yuchen Guo},   year = {2025},   note = {R package version 0.4.0},   url = {https://ohdsi.github.io/OmopViewer/}, }"},{"path":"https://ohdsi.github.io/OmopViewer/index.html","id":"omopviewer","dir":"","previous_headings":"","what":"Visualise OMOP Results using shiny Applications","title":"Visualise OMOP Results using shiny Applications","text":"goal OmopViewer allow user easily create Shiny Apps visualise study results <summarised_result> format.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Visualise OMOP Results using shiny Applications","text":"Install cran: can install development version OmopViewer GitHub :","code":"install.packages(\"OmopViewer\") install.packages(\"pak\") pak::pkg_install(\"OHDSI/OmopViewer\")"},{"path":"https://ohdsi.github.io/OmopViewer/index.html","id":"main-functionalities","dir":"","previous_headings":"","what":"Main functionalities","title":"Visualise OMOP Results using shiny Applications","text":"package two functionalities: Static app Dynamic app","code":"library(OmopViewer)"},{"path":"https://ohdsi.github.io/OmopViewer/index.html","id":"static-shiny-app","dir":"","previous_headings":"","what":"Static shiny app","title":"Visualise OMOP Results using shiny Applications","text":"static shiny app functionality creates static shiny list summarised_result objects. shiny specific set results can modified later locally. function allow customisation shiny arguments: theme (choose pre-built theme bslib one). logo (can point one pre-builr logos local image). title background whether allow .md file customisation background panel. summary whether include summary panel. panelStructure allows structure different panels dropdown menus. panelDetails allows create panels result_id level assign outputs want include panel. shiny generated following structure: global.R loads data. ui.R ui code. can edit buttons default values. server.R server logic, can edit file change displays. functions.R utility functions used shiny app. data/result.csv original summarised_result provided. data/ShinyData.RData .RData file contains data used shiny. data/preprocess.R file generate ShinyData.RData results.csv","code":"# lets generate some results library(CohortCharacteristics) cdm <- mockCohortCharacteristics() result <- summariseCharacteristics(cdm$cohort1) |>   bind(summariseCohortAttrition(cdm$cohort1)) #> ℹ adding demographics columns #> ℹ summarising data #> ℹ summarising cohort cohort_1 #> ℹ summarising cohort cohort_2 #> ℹ summarising cohort cohort_3 #> ✔ summariseCharacteristics finished!  exportStaticApp(result = result, directory = tempdir()) #> ℹ Processing data #> ✔ Data processed: 2 panels idenfied: `summarise_cohort_attrition` and #>   `summarise_characteristics`. #> ℹ Creating shiny from provided data #> ✔ Shiny created in: #>   /var/folders/pl/k11lm9710hlgl02nvzx4z9wr0000gp/T//RtmpBLLZg0/shiny"},{"path":"https://ohdsi.github.io/OmopViewer/index.html","id":"dynamic-shiny-app","dir":"","previous_headings":"","what":"Dynamic shiny app","title":"Visualise OMOP Results using shiny Applications","text":"dynamic shiny app can easily launched launchDynamicApp() function. function creates shinyApp can upload multiple results sets visualise . default shiny generated data, upload data csv zip file locally. summarised_results processed allowed choose results visualise.","code":"launchDynamicApp()"},{"path":"https://ohdsi.github.io/OmopViewer/index.html","id":"example-shiny","dir":"","previous_headings":"","what":"Example shiny","title":"Visualise OMOP Results using shiny Applications","text":"example shiny can found : https://dpa-pde-oxford.shinyapps.io/OmopViewerExample/. shinyApp automatically build main using latest versions omopViewerResults dataset omopViewerPanels panels definitions.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/OmopViewer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"OmopViewer: Visualise OMOP Results using 'shiny' Applications — OmopViewer-package","title":"OmopViewer: Visualise OMOP Results using 'shiny' Applications — OmopViewer-package","text":"Visualise results obtained analysing data mapped Observational Medical Outcomes Partnership (OMOP) common data model using 'shiny' applications.","code":""},{"path":[]},{"path":"https://ohdsi.github.io/OmopViewer/reference/OmopViewer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"OmopViewer: Visualise OMOP Results using 'shiny' Applications — OmopViewer-package","text":"Maintainer: Martí Català marti.catalasabate@ndorms.ox.ac.uk (ORCID) Authors: Yuchen Guo yuchen.guo@ndorms.ox.ac.uk (ORCID) contributors: Edward Burn edward.burn@ndorms.ox.ac.uk (ORCID) [contributor] Nuria Mercade-Besora nuria.mercadebesora@ndorms.ox.ac.uk (ORCID) [contributor] Elin Rowlands elin.rowlands@ndorms.ox.ac.uk (ORCID) [contributor] Cecilia Campanile cecilia.campanile@ndorms.ox.ac.uk (ORCID) [contributor]","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/defaultPanels.html","id":null,"dir":"Reference","previous_headings":"","what":"Default panels defined in the package. — defaultPanels","title":"Default panels defined in the package. — defaultPanels","text":"Default panels defined package.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/defaultPanels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default panels defined in the package. — defaultPanels","text":"","code":"defaultPanels()"},{"path":"https://ohdsi.github.io/OmopViewer/reference/defaultPanels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default panels defined in the package. — defaultPanels","text":"Names default panels defined package.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/defaultPanels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default panels defined in the package. — defaultPanels","text":"","code":"defaultPanels() #>  [1] \"summarise_omop_snapshot\"                  #>  [2] \"summarise_observation_period\"             #>  [3] \"summarise_clinical_records\"               #>  [4] \"summarise_record_count\"                   #>  [5] \"summarise_missing_data\"                   #>  [6] \"summarise_in_observation\"                 #>  [7] \"orphan_code_use\"                          #>  [8] \"cohort_code_use\"                          #>  [9] \"code_use\"                                 #> [10] \"achilles_code_use\"                        #> [11] \"unmapped_codes\"                           #> [12] \"summarise_cohort_overlap\"                 #> [13] \"summarise_cohort_count\"                   #> [14] \"summarise_cohort_attrition\"               #> [15] \"summarise_cohort_timing\"                  #> [16] \"summarise_characteristics\"                #> [17] \"summarise_large_scale_characteristics\"    #> [18] \"incidence\"                                #> [19] \"incidence_attrition\"                      #> [20] \"prevalence\"                               #> [21] \"prevalence_attrition\"                     #> [22] \"summarise_dose_coverage\"                  #> [23] \"summarise_proportion_of_patients_covered\" #> [24] \"summarise_drug_restart\"                   #> [25] \"summarise_drug_utilisation\"               #> [26] \"summarise_indication\"                     #> [27] \"summarise_treatment\"                      #> [28] \"default\""},{"path":"https://ohdsi.github.io/OmopViewer/reference/exportStaticApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Export and launch a static shiny specific to the provided results. — exportStaticApp","title":"Export and launch a static shiny specific to the provided results. — exportStaticApp","text":"Export launch static shiny specific provided results.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/exportStaticApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export and launch a static shiny specific to the provided results. — exportStaticApp","text":"","code":"exportStaticApp(   result,   directory,   logo = \"ohdsi\",   title = \"\",   background = TRUE,   summary = TRUE,   panelDetails = panelDetailsFromResult(result),   panelStructure = NULL,   theme = NULL,   updateButtons = TRUE,   open = rlang::is_interactive() )"},{"path":"https://ohdsi.github.io/OmopViewer/reference/exportStaticApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export and launch a static shiny specific to the provided results. — exportStaticApp","text":"result summarised_result object. directory Directory create shiny. logo Name logo path logo. NULL logo included. svg format allowed moment. title title shiny background Whether include background panel. Background panel content controlled generated background.md file. summary Whether include panel summary content result. panelDetails named list provide details one panels, : result_id, result_type, title, icon, filters content. default created using panelDetailsFromResult() function. panelStructure named list panel identifiers organise drop-menus. Identifiers names ones used panelDetails. default one panel per panelDetails element created. theme Specify theme Shiny application. can either select predefined theme provided package (e.g., \"theme1\"), define custom theme using bslib::bs_theme(). using custom theme, must provided character string (e.g., \"bslib::bs_theme(bg = 'white', fg = 'black')\"). updateButtons Whether include update buttons visualisations. open Whether open shiny app project.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/exportStaticApp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export and launch a static shiny specific to the provided results. — exportStaticApp","text":"shiny app created directory.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/exportStaticApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export and launch a static shiny specific to the provided results. — exportStaticApp","text":"","code":"exportStaticApp(   result = omopgenerics::emptySummarisedResult(),   directory = tempdir() ) #> ℹ Processing data #> ! No panels identified, generated shiny will be empty. #> ℹ Creating shiny from provided data #> ✔ Shiny created in: /tmp/RtmpPpZtBV/shiny"},{"path":"https://ohdsi.github.io/OmopViewer/reference/getPanel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get one of the default pre-built panels. — getPanel","title":"Get one of the default pre-built panels. — getPanel","text":"Get one default pre-built panels.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/getPanel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get one of the default pre-built panels. — getPanel","text":"","code":"getPanel(panelId)"},{"path":"https://ohdsi.github.io/OmopViewer/reference/getPanel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get one of the default pre-built panels. — getPanel","text":"panelId Name one default panels. Use defaultPanels() see available default panels.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/getPanel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get one of the default pre-built panels. — getPanel","text":"panel definition.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/getPanel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get one of the default pre-built panels. — getPanel","text":"","code":"getPanel(\"incidence\") #> Incidence (OmopViewer panel) #> •  icon: chart-line #> •  data: result_type: <incidence> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Incidence (gt); Plot Incidence (ui); Plot population (ui)"},{"path":[]},{"path":"https://ohdsi.github.io/OmopViewer/reference/launchDynamicApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch a dynamic shiny app where you can upload results. — launchDynamicApp","text":"","code":"launchDynamicApp()"},{"path":"https://ohdsi.github.io/OmopViewer/reference/launchDynamicApp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch a dynamic shiny app where you can upload results. — launchDynamicApp","text":"Launches shiny app.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/omopViewerPanels.html","id":null,"dir":"Reference","previous_headings":"","what":"Panels defined in the package. — omopViewerPanels","title":"Panels defined in the package. — omopViewerPanels","text":"panels generated using following file: https://github.com/OHDSI/OmopViewer/blob/main/data-raw/panels.R.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/omopViewerPanels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Panels defined in the package. — omopViewerPanels","text":"","code":"omopViewerPanels"},{"path":[]},{"path":"https://ohdsi.github.io/OmopViewer/reference/omopViewerPanels.html","id":"omopviewerpanels","dir":"Reference","previous_headings":"","what":"omopViewerPanels","title":"Panels defined in the package. — omopViewerPanels","text":"list 26 omopviewer_panel obejcts:","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/omopViewerResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Mock results obtained from GiBleed dataset. — omopViewerResults","title":"Mock results obtained from GiBleed dataset. — omopViewerResults","text":"results generated using following file: https://github.com/OHDSI/OmopViewer/blob/main/data-raw/results.R.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/omopViewerResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mock results obtained from GiBleed dataset. — omopViewerResults","text":"","code":"omopViewerResults"},{"path":[]},{"path":"https://ohdsi.github.io/OmopViewer/reference/omopViewerResults.html","id":"omopviewerresults","dir":"Reference","previous_headings":"","what":"omopViewerResults","title":"Mock results obtained from GiBleed dataset. — omopViewerResults","text":"summarised_result object 12,017 rows:","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/panelDetailsFromResult.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain default panel details from a <summarised_result> object. — panelDetailsFromResult","title":"Obtain default panel details from a <summarised_result> object. — panelDetailsFromResult","text":"Obtain default panel details <summarised_result> object.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/panelDetailsFromResult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain default panel details from a <summarised_result> object. — panelDetailsFromResult","text":"","code":"panelDetailsFromResult(result)"},{"path":"https://ohdsi.github.io/OmopViewer/reference/panelDetailsFromResult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain default panel details from a <summarised_result> object. — panelDetailsFromResult","text":"result summarised_result object.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/panelDetailsFromResult.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain default panel details from a <summarised_result> object. — panelDetailsFromResult","text":"list omop_viewer_panel objects.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/panelDetailsFromResult.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain default panel details from a <summarised_result> object. — panelDetailsFromResult","text":"","code":"panelDetailsFromResult(omopViewerResults) #> $summarise_omop_snapshot #> Snapshot (OmopViewer panel) #> •  icon: clipboard-list #> •  data: result_type: <summarise_omop_snapshot> #> •  filters: 1 filters + 1 automatic filters #> •  content: Tidy (DT); Table Snapshot (gt) #>  #> $summarise_observation_period #> Observation period (OmopViewer panel) #> •  icon: eye #> •  data: result_type: <summarise_observation_period> #> •  filters: 1 filters + 4 automatic filters #> •  content: Tidy (DT); Table Observation period (gt); Plot Observation period (ui) #>  #> $summarise_clinical_records #> Clinical records (OmopViewer panel) #> •  icon: bars-staggered #> •  data: result_type: <summarise_clinical_records> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Clinical records (gt) #>  #> $summarise_record_count #> Record count (OmopViewer panel) #> •  icon: signal #> •  data: result_type: <summarise_record_count> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Plot record count (ui) #>  #> $summarise_missing_data #> Missing data (OmopViewer panel) #> •  icon: circle-exclamation #> •  data: result_type: <summarise_missing_data> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Missing data (gt) #>  #> $summarise_in_observation #> In Observation (OmopViewer panel) #> •  icon: explosion #> •  data: result_type: <summarise_in_observation> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Plot in observation (ui) #>  #> $orphan_code_use #> Orphan codes (OmopViewer panel) #> •  icon: magnifying-glass-arrow-right #> •  data: result_type: <orphan_code_use> #> •  filters: 1 filters + 4 automatic filters #> •  content: Tidy (DT); Table Orphan codes (gt) #>  #> $cohort_code_use #> Cohort code use (OmopViewer panel) #> •  icon: chart-column #> •  data: result_type: <cohort_code_use> #> •  filters: 1 filters + 4 automatic filters #> •  content: Tidy (DT); Table Cohort code use (gt) #>  #> $code_use #> Code use (OmopViewer panel) #> •  icon: chart-column #> •  data: result_type: <code_use> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Code use (gt) #>  #> $achilles_code_use #> Achilles code use (OmopViewer panel) #> •  icon: chart-column #> •  data: result_type: <achilles_code_use> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Achilles code use (gt) #>  #> $unmapped_codes #> Unmapped codes (OmopViewer panel) #> •  icon: chart-column #> •  data: result_type: <unmapped_codes> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Unmapped codes (gt) #>  #> $summarise_cohort_overlap #> Cohort Overlap (OmopViewer panel) #> •  icon: circle-half-stroke #> •  data: result_type: <summarise_cohort_overlap> #> •  filters: 1 filters + 5 automatic filters #> •  content: Tidy (DT); Table Overlap (gt); Plot Overlap (ui) #>  #> $summarise_cohort_count #> Cohort Count (OmopViewer panel) #> •  icon: users #> •  data: result_type: <summarise_cohort_count> #> •  filters: 1 filters + 4 automatic filters #> •  content: Tidy (DT); Table Counts (gt); Plot Counts (ui) #>  #> $summarise_cohort_attrition #> Cohort Attrition (OmopViewer panel) #> •  icon: layer-group #> •  data: result_type: <summarise_cohort_attrition> #> •  filters: 1 filters + 2 automatic filters #> •  content: Tidy (DT); Table Attrition (gt); Diagram (grViz) #>  #> $summarise_cohort_timing #> Cohort Timing (OmopViewer panel) #> •  icon: chart-simple #> •  data: result_type: <summarise_cohort_timing> #> •  filters: 1 filters + 2 automatic filters #> •  content: Tidy (DT); Table Timing (gt); Plot Timing (ui) #>  #> $summarise_characteristics #> Cohort Characteristics (OmopViewer panel) #> •  icon: users-gear #> •  data: result_type: <summarise_characteristics> #> •  filters: 1 filters + 4 automatic filters #> •  content: Tidy (DT); Table Characteristics (gt); Plot Characteristics (ui) #>  #> $summarise_large_scale_characteristics #> Large Scale Characteristics (OmopViewer panel) #> •  icon: arrow-up-right-dots #> •  data: result_type: <summarise_large_scale_characteristics> #> •  filters: 1 filters + 4 automatic filters #> •  content: Table (reactable); Most common codes (gt); Plot Compared (plotly) #>  #> $incidence #> Incidence (OmopViewer panel) #> •  icon: chart-line #> •  data: result_type: <incidence> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Incidence (gt); Plot Incidence (ui); Plot population (ui) #>  #> $incidence_attrition #> Incidence Attrition (OmopViewer panel) #> •  icon: layer-group #> •  data: result_type: <incidence_attrition> #> •  filters: 1 filters + 2 automatic filters #> •  content: Tidy (DT); Table Incidence Attrition (gt) #>  #> $prevalence #> Prevalence (OmopViewer panel) #> •  icon: chart-column #> •  data: result_type: <prevalence> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Prevalence (gt); Plot Prevalence (ui); Plot population (ui) #>  #> $prevalence_attrition #> Prevalence Attrition (OmopViewer panel) #> •  icon: layer-group #> •  data: result_type: <prevalence_attrition> #> •  filters: 1 filters + 2 automatic filters #> •  content: Tidy (DT); Table Prevalence Attrition (gt) #>  #> $summarise_dose_coverage #> Dose coverage (OmopViewer panel) #> •  icon: pills #> •  data: result_type: <summarise_dose_coverage> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Dose coverage (gt) #>  #> $summarise_proportion_of_patients_covered #> Proportion of patients covered (OmopViewer panel) #> •  icon: chart-gantt #> •  data: result_type: <summarise_proportion_of_patients_covered> #> •  filters: 1 filters + 3 automatic filters #> •  content: Tidy (DT); Table PPC (gt); Plot PPC (ui) #>  #> $summarise_drug_restart #> Drug Restart (OmopViewer panel) #> •  icon: chart-gantt #> •  data: result_type: <summarise_drug_restart> #> •  filters: 1 filters + 3 automatic filters #> •  content: Tidy (DT); Table Drug Restart (gt); Plot Drug Restart (ui) #>  #> $summarise_drug_utilisation #> Drug Utilisation (OmopViewer panel) #> •  icon: capsules #> •  data: result_type: <summarise_drug_utilisation> #> •  filters: 1 filters + 6 automatic filters #> •  content: Tidy (DT); Table Drug Utilisation (gt); Plot Drug Utilisation (ui) #>  #> $summarise_indication #> Indication (OmopViewer panel) #> •  icon: disease #> •  data: result_type: <summarise_indication> #> •  filters: 1 filters + 7 automatic filters #> •  content: Tidy (DT); Table Indication (gt); Plot Indication (ui) #>  #> $summarise_treatment #> Treatments (OmopViewer panel) #> •  icon: disease #> •  data: result_type: <summarise_treatment> #> •  filters: 1 filters + 7 automatic filters #> •  content: Tidy (DT); Table Treatments (gt); Plot Treatment (ui) #>"}]
