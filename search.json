[{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://ohdsi.github.io/OmopViewer/articles/adding_new_panels.html","id":"note-for-developers","dir":"Articles","previous_headings":"","what":"Note for developers","title":"adding_new_panels","text":"wish configure new Tab can done editing omopViewerPanels object defined file panels.R. Please feel free submit PR.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/articles/background.html","id":"general-markdown-behaviour","dir":"Articles","previous_headings":"","what":"General markdown behaviour","title":"Edit the background panel of your shiny using `background.md`","text":"markdown part compiled using function markdown::markdownToHTML(), anything supported function can included markdown part. commonly used markdown functionalities : # titles ## subtitles ### third level titles, … ![](image.png) add images. Remember root folder ‘shiny/www/’ *...* italic text. **...** bold text. - bullet points. simple example: shiny contains information : B C ohdsi logo:","code":"# Introduction  This shiny *contains information* on:  - A - B - C  ## Images  The **ohdsi** logo: ![]('ohdsi_logo.svg'){width=100px}"},{"path":"https://ohdsi.github.io/OmopViewer/articles/background.html","id":"populate-yaml-part","dir":"Articles","previous_headings":"","what":"Populate yaml part","title":"Edit the background panel of your shiny using `background.md`","text":"can add metadata markdown using yaml top. need put metadata ---: yaml metadata can contain two types information: keywords add elements card. arguments bslib::card function.","code":"--- YAML CONTENT ---  BODY CONTENT"},{"path":"https://ohdsi.github.io/OmopViewer/articles/background.html","id":"keywords","dir":"Articles","previous_headings":"Populate yaml part","what":"Keywords","title":"Edit the background panel of your shiny using `background.md`","text":"following keywords can used edit bslib::card() content: Function column states function triggered. Let’s see add header footer card: bla bla bla bla…","code":"--- header: \"Card header\" footer: \"Some extra information\" --- # Introduction  bla bla bla bla..."},{"path":"https://ohdsi.github.io/OmopViewer/articles/background.html","id":"bslibcard-arguments","dir":"Articles","previous_headings":"Populate yaml part","what":"bslib::card() arguments","title":"Edit the background panel of your shiny using `background.md`","text":"can control arguments bslib::card() using metadata included yaml file. include metadata background.md file. can check documentation bslib::card(), supported arguments can populated using values (calls functions): full_screen height max_height min_height fill class id example: shiny contains information : B C Let’s see html can see id class populated:","code":"---- header: \"My custom card\" id: \"my_custom_id\" # this can be later used in the css class: \"my_custom_class\" # this can be later used in the css height: 100px ---- # Introduction  This shiny *contains information* on:  - A - B - C #> <div class=\"card bslib-card bslib-mb-spacing bslib-card-input html-fill-item html-fill-container my_custom_class\" data-bslib-card-init data-require-bs-caller=\"card()\" data-require-bs-version=\"5\" id=\"my_custom_id\" style=\"height:200px;\"> #>   <div class=\"card-header\">My custom card<\/div> #>   <div class=\"card-body bslib-gap-spacing html-fill-item html-fill-container\" style=\"margin-top:auto;margin-bottom:auto;flex:1 1 auto;\"><h1 id=\"introduction\">Introduction<\/h1> #> <p>This shiny <em>contains information<\/em> on:<\/p> #> <ul> #> <li>A<\/li> #> <li>B<\/li> #> <li>C<\/li> #> <\/ul> #> <\/div> #>   <script data-bslib-card-init>bslib.Card.initializeAllCards();<\/script> #> <\/div>"},{"path":"https://ohdsi.github.io/OmopViewer/articles/configured_panels.html","id":"panel-details-stucture","dir":"Articles","previous_headings":"","what":"Panel details stucture","title":"Panels definned in OmopViewer","text":"Panel details print shows: Title: title panel. Icon: icon panel (see https://fontawesome.com/search?ic=free). Data: data filtered: contains settings filter original result. Filters: buttons (shinyWidgets::pickerInput) created filter result. Content: different visualisations going displayed panel. details internal structure define new panels explained adding_new_panels. see internal structure can use unclass:","code":"unclass(getPanel(\"incidence\")) #> $title #> [1] \"Incidence\" #>  #> $icon #> [1] \"chart-line\" #>  #> $data #> $data$result_type #> [1] \"incidence\" #>  #>  #> $automatic_filters #> [1] \"group\"         \"strata\"        \"additional\"    \"settings\"      #> [5] \"variable_name\" \"estimate_name\" #>  #> $exclude_filters #> [1] \"denominator_cohort_name\" #>  #> $filters #> $filters$cdm_name #> $filters$cdm_name$button_type #> [1] \"pickerInput\" #>  #> $filters$cdm_name$label #> [1] \"CDM name\" #>  #> $filters$cdm_name$column #> [1] \"cdm_name\" #>  #> $filters$cdm_name$column_type #> [1] \"main\" #>  #> $filters$cdm_name$choices #> [1] \"choices$\" #>  #> $filters$cdm_name$selected #> [1] \"selected$\" #>  #> $filters$cdm_name$multiple #> [1] TRUE #>  #>  #>  #> $content #> $content$tidy #> $content$tidy$title #> [1] \"Test\" #>  #> $content$tidy$output_type #> [1] \"DT\" #>  #> $content$tidy$render #> [1] \"tidyDT(<filtered_data>, input$columns, input$pivot_estimates)\" #>  #> $content$tidy$filters #> $content$tidy$filters$columns #> $content$tidy$filters$columns$button_type #> [1] \"pickerInput\" #>  #> $content$tidy$filters$columns$label #> [1] \"Columns\" #>  #> $content$tidy$filters$columns$choices #> [1] \"cdm_name\"       \"<group>\"        \"<strata>\"       \"<additional>\"   #> [5] \"<settings>\"     \"variable_name\"  \"variable_level\" #>  #> $content$tidy$filters$columns$selected #> [1] \"cdm_name\"       \"<group>\"        \"<strata>\"       \"<additional>\"   #> [5] \"variable_name\"  \"variable_level\" #>  #> $content$tidy$filters$columns$multiple #> [1] TRUE #>  #>  #> $content$tidy$filters$pivot_estimates #> $content$tidy$filters$pivot_estimates$button_type #> [1] \"checkbox\" #>  #> $content$tidy$filters$pivot_estimates$label #> [1] \"Pivot estimates\" #>  #> $content$tidy$filters$pivot_estimates$value #> [1] TRUE #>  #>  #>  #> $content$tidy$download #> $content$tidy$download$label #> [1] \"Download csv\" #>  #> $content$tidy$download$render #> [1] \"<filtered_data> |>\\n    omopgenerics::tidy() |>\\n    readr::write_csv(file = file)\" #>  #> $content$tidy$download$filename #> [1] \"tidy_results.csv\" #>  #>  #>  #> $content$table #> $content$table$title #> [1] \"Table Incidence\" #>  #> $content$table$output_type #> [1] \"gt\" #>  #> $content$table$render #> [1] \"res <- <filtered_data>\\n      res |>\\n      IncidencePrevalence::tableIncidence(\\n      header = input$header,\\n      groupColumn = input$group_column,\\n      hide = input$hide,\\n      settingsColumn = omopgenerics::settingsColumns(res)\\n      )\" #>  #> $content$table$filters #> $content$table$filters$none #> $content$table$filters$none$button_type #> [1] \"rank_list\" #>  #> $content$table$filters$none$text #> [1] \"None\" #>  #> $content$table$filters$none$labels #> [1] \"<strata>\"              \"incidence_start_date\"  \"incidence_end_date\"    #> [4] \"denominator_age_group\" \"denominator_sex\"       #>  #>  #> $content$table$filters$header #> $content$table$filters$header$button_type #> [1] \"rank_list\" #>  #> $content$table$filters$header$text #> [1] \"Header\" #>  #> $content$table$filters$header$labels #> [1] \"estimate_name\" #>  #>  #> $content$table$filters$group_column #> $content$table$filters$group_column$button_type #> [1] \"rank_list\" #>  #> $content$table$filters$group_column$text #> [1] \"Group columns\" #>  #> $content$table$filters$group_column$labels #> [1] \"cdm_name\"            \"outcome_cohort_name\" #>  #>  #> $content$table$filters$hide #> $content$table$filters$hide$button_type #> [1] \"rank_list\" #>  #> $content$table$filters$hide$text #> [1] \"Hide\" #>  #> $content$table$filters$hide$labels #>  [1] \"denominator_cohort_name\"              #>  [2] \"analysis_interval\"                    #>  [3] \"analysis_censor_cohort_name\"          #>  [4] \"analysis_complete_database_intervals\" #>  [5] \"analysis_outcome_washout\"             #>  [6] \"analysis_repeated_events\"             #>  [7] \"denominator_days_prior_observation\"   #>  [8] \"denominator_end_date\"                 #>  [9] \"denominator_requirements_at_entry\"    #> [10] \"denominator_start_date\"               #> [11] \"denominator_target_cohort_name\"       #> [12] \"denominator_time_at_risk\"             #>  #>  #>  #> $content$table$download #> $content$table$download$label #> [1] \"Download table\" #>  #> $content$table$download$filters #> $content$table$download$filters$format #> $content$table$download$filters$format$button_type #> [1] \"pickerInput\" #>  #> $content$table$download$filters$format$label #> [1] \"Format\" #>  #> $content$table$download$filters$format$choices #> [1] \"docx\" \"png\"  \"pdf\"  \"html\" #>  #> $content$table$download$filters$format$selected #> [1] \"docx\" #>  #> $content$table$download$filters$format$multiple #> [1] FALSE #>  #>  #>  #> $content$table$download$render #> [1] \"gt::gtsave(<rendered_data>, file)\" #>  #> $content$table$download$filename #> [1] \"paste0(\\\"table_incidence.\\\", input$format)\" #>  #>  #>  #> $content$plot #> $content$plot$title #> [1] \"Plot Incidence\" #>  #> $content$plot$output_type #> [1] \"plot\" #>  #> $content$plot$render #> [1] \"<filtered_data> |>\\n      IncidencePrevalence::plotIncidence(\\n      x = input$x,\\n      facet = input$facet,\\n      colour = input$colour\\n      )\" #>  #> $content$plot$filters #> $content$plot$filters$x #> $content$plot$filters$x$button_type #> [1] \"pickerInput\" #>  #> $content$plot$filters$x$label #> [1] \"x axis\" #>  #> $content$plot$filters$x$choices #> [1] \"cdm_name\"     \"<group>\"      \"<strata>\"     \"<additional>\" \"<settings>\"   #>  #> $content$plot$filters$x$selected #> [1] \"incidence_start_date\" #>  #> $content$plot$filters$x$multiple #> [1] FALSE #>  #>  #> $content$plot$filters$facet #> $content$plot$filters$facet$button_type #> [1] \"pickerInput\" #>  #> $content$plot$filters$facet$label #> [1] \"Facet\" #>  #> $content$plot$filters$facet$choices #> [1] \"cdm_name\"     \"<group>\"      \"<strata>\"     \"<additional>\" \"<settings>\"   #>  #> $content$plot$filters$facet$selected #> [1] \"cdm_name\" #>  #> $content$plot$filters$facet$multiple #> [1] TRUE #>  #>  #> $content$plot$filters$colour #> $content$plot$filters$colour$button_type #> [1] \"pickerInput\" #>  #> $content$plot$filters$colour$label #> [1] \"Colour\" #>  #> $content$plot$filters$colour$choices #> [1] \"cdm_name\"     \"<group>\"      \"<strata>\"     \"<additional>\" \"<settings>\"   #>  #> $content$plot$filters$colour$selected #> [1] \"outcome_cohort_name\" #>  #> $content$plot$filters$colour$multiple #> [1] TRUE #>  #>  #>  #> $content$plot$download #> $content$plot$download$label #> [1] \"Download plot\" #>  #> $content$plot$download$filters #> $content$plot$download$filters$width #> $content$plot$download$filters$width$button_type #> [1] \"numericInput\" #>  #> $content$plot$download$filters$width$label #> [1] \"Width\" #>  #> $content$plot$download$filters$width$value #> [1] 15 #>  #>  #> $content$plot$download$filters$height #> $content$plot$download$filters$height$button_type #> [1] \"numericInput\" #>  #> $content$plot$download$filters$height$label #> [1] \"Height\" #>  #> $content$plot$download$filters$height$value #> [1] 15 #>  #>  #> $content$plot$download$filters$units #> $content$plot$download$filters$units$button_type #> [1] \"pickerInput\" #>  #> $content$plot$download$filters$units$label #> [1] \"Units\" #>  #> $content$plot$download$filters$units$selected #> [1] \"cm\" #>  #> $content$plot$download$filters$units$choices #> [1] \"px\"   \"cm\"   \"inch\" #>  #> $content$plot$download$filters$units$multiple #> [1] FALSE #>  #>  #> $content$plot$download$filters$dpi #> $content$plot$download$filters$dpi$button_type #> [1] \"numericInput\" #>  #> $content$plot$download$filters$dpi$label #> [1] \"DPI\" #>  #> $content$plot$download$filters$dpi$value #> [1] 300 #>  #>  #>  #> $content$plot$download$render #> [1] \"plt <- <rendered_data>\\n        ggplot2::ggsave(\\n          filename = file,\\n          plot = plt,\\n          width = as.numeric(input$width),\\n          height = as.numeric(input$height),\\n          units = input$units,\\n          dpi = as.numeric(input$dpi)\\n        )\" #>  #> $content$plot$download$filename #> [1] \"plot_incidence.png\""},{"path":"https://ohdsi.github.io/OmopViewer/articles/theming.html","id":"predefined-themes","dir":"Articles","previous_headings":"","what":"Predefined themes","title":"Theming your shiny","text":"See predefined themes:","code":""},{"path":"https://ohdsi.github.io/OmopViewer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martí Català. Author, maintainer. Yuchen Guo. Author. Edward Burn. Contributor. Nuria Mercade-Besora. Contributor. Elin Rowlands. Contributor. Cecilia Campanile. Contributor.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Català M, Guo Y (2025). OmopViewer: Visualise OMOP Results using 'shiny' Applications. R package version 0.2.1.900, https://ohdsi.github.io/OmopViewer/.","code":"@Manual{,   title = {OmopViewer: Visualise OMOP Results using 'shiny' Applications},   author = {Martí Català and Yuchen Guo},   year = {2025},   note = {R package version 0.2.1.900},   url = {https://ohdsi.github.io/OmopViewer/}, }"},{"path":"https://ohdsi.github.io/OmopViewer/index.html","id":"omopviewer","dir":"","previous_headings":"","what":"Visualise OMOP Results using shiny Applications","title":"Visualise OMOP Results using shiny Applications","text":"goal OmopViewer allow user easily create Shiny Apps visualise study results <summarised_result> format.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Visualise OMOP Results using shiny Applications","text":"Install cran: can install development version OmopViewer GitHub :","code":"install.packages(\"OmopViewer\") install.packages(\"pak\") pak::pkg_install(\"OHDSI/OmopViewer\")"},{"path":"https://ohdsi.github.io/OmopViewer/index.html","id":"main-functionalities","dir":"","previous_headings":"","what":"Main functionalities","title":"Visualise OMOP Results using shiny Applications","text":"package two functionalities: Static app Dynamic app","code":"library(OmopViewer)"},{"path":"https://ohdsi.github.io/OmopViewer/index.html","id":"static-shiny-app","dir":"","previous_headings":"","what":"Static shiny app","title":"Visualise OMOP Results using shiny Applications","text":"static shiny app functionality creates static shiny list summarised_result objects. shiny specific set results can modified later locally. function allow customisation shiny arguments: theme (choose pre-built theme bslib one). logo (can point one pre-builr logos local image). title background whether allow .md file customisation background panel. summary whether include summary panel. panelStructure allows structure different panels dropdown menus. panelDetails allows create panels result_id level assign outputs want include panel. shiny generated following structure: global.R loads data. ui.R ui code. can edit buttons default values. server.R server logic, can edit file change displays. functions.R utility functions used shiny app. data/result.csv original summarised_result provided. data/ShinyData.RData .RData file contains data used shiny. data/preprocess.R file generate ShinyData.RData results.csv","code":"# lets generate some results library(CohortCharacteristics) #> Registered S3 method overwritten by 'visOmopResults': #>   method                 from         #>   tidy.summarised_result omopgenerics cdm <- mockCohortCharacteristics() #> Note: method with signature 'DBIConnection#Id' chosen for function 'dbExistsTable', #>  target signature 'duckdb_connection#Id'. #>  \"duckdb_connection#ANY\" would also be valid result <- summariseCharacteristics(cdm$cohort1) |>   bind(summariseCohortAttrition(cdm$cohort1)) #> ℹ adding demographics columns #> ℹ summarising data #> ✔ summariseCharacteristics finished! #> `cohort_definition_id` casted to character.  exportStaticApp(result = result, directory = tempdir()) #> ℹ Processing data #> ✔ Data processed: 2 panels idenfied: `summarise_characteristics` and #>   `summarise_cohort_attrition`. #> ℹ Creating shiny from provided data #> `cohort_definition_id` eliminated from settings as all elements are NA. #> ✔ Shiny created in: #>   /var/folders/pl/k11lm9710hlgl02nvzx4z9wr0000gp/T//RtmpYP9P88/shiny"},{"path":"https://ohdsi.github.io/OmopViewer/index.html","id":"dynamic-shiny-app","dir":"","previous_headings":"","what":"Dynamic shiny app","title":"Visualise OMOP Results using shiny Applications","text":"dynamic shiny app can easily launched launchDynamicApp() function. function creates shinyApp can upload multiple results sets visualise . default shiny generated data, upload data csv zip file locally. summarised_results processed allowed choose results visualise.","code":"launchDynamicApp()"},{"path":"https://ohdsi.github.io/OmopViewer/reference/OmopViewer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"OmopViewer: Visualise OMOP Results using 'shiny' Applications — OmopViewer-package","title":"OmopViewer: Visualise OMOP Results using 'shiny' Applications — OmopViewer-package","text":"Visualise results obtained analysing data mapped Observational Medical Outcomes Partnership (OMOP) common data model using 'shiny' applications.","code":""},{"path":[]},{"path":"https://ohdsi.github.io/OmopViewer/reference/OmopViewer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"OmopViewer: Visualise OMOP Results using 'shiny' Applications — OmopViewer-package","text":"Maintainer: Martí Català marti.catalasabate@ndorms.ox.ac.uk (ORCID) Authors: Yuchen Guo yuchen.guo@ndorms.ox.ac.uk (ORCID) contributors: Edward Burn edward.burn@ndorms.ox.ac.uk (ORCID) [contributor] Nuria Mercade-Besora nuria.mercadebesora@ndorms.ox.ac.uk (ORCID) [contributor] Elin Rowlands elin.rowlands@ndorms.ox.ac.uk (ORCID) [contributor] Cecilia Campanile cecilia.campanile@ndorms.ox.ac.uk (ORCID) [contributor]","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/defaultPanels.html","id":null,"dir":"Reference","previous_headings":"","what":"Default panels defined in the package. — defaultPanels","title":"Default panels defined in the package. — defaultPanels","text":"Default panels defined package.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/defaultPanels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default panels defined in the package. — defaultPanels","text":"","code":"defaultPanels()"},{"path":"https://ohdsi.github.io/OmopViewer/reference/defaultPanels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default panels defined in the package. — defaultPanels","text":"Names default panels defined package.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/defaultPanels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default panels defined in the package. — defaultPanels","text":"","code":"defaultPanels() #>  [1] \"summarise_omop_snapshot\"                  #>  [2] \"summarise_observation_period\"             #>  [3] \"summarise_clinical_records\"               #>  [4] \"summarise_record_count\"                   #>  [5] \"summarise_missing_data\"                   #>  [6] \"summarise_in_observation\"                 #>  [7] \"orphan_code_use\"                          #>  [8] \"cohort_code_use\"                          #>  [9] \"code_use\"                                 #> [10] \"achilles_code_use\"                        #> [11] \"unmapped_codes\"                           #> [12] \"summarise_cohort_overlap\"                 #> [13] \"summarise_cohort_count\"                   #> [14] \"summarise_cohort_attrition\"               #> [15] \"summarise_cohort_timing\"                  #> [16] \"summarise_characteristics\"                #> [17] \"incidence\"                                #> [18] \"incidence_attrition\"                      #> [19] \"prevalence\"                               #> [20] \"prevalence_attrition\"                     #> [21] \"summarise_dose_coverage\"                  #> [22] \"summarise_proportion_of_patients_covered\" #> [23] \"summarise_drug_restart\"                   #> [24] \"summarise_drug_utilisation\"               #> [25] \"summarise_indication\"                     #> [26] \"summarise_treatment\"                      #> [27] \"default\""},{"path":"https://ohdsi.github.io/OmopViewer/reference/exportStaticApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Export and launch a static shiny specific to the provided results. — exportStaticApp","title":"Export and launch a static shiny specific to the provided results. — exportStaticApp","text":"Export launch static shiny specific provided results.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/exportStaticApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export and launch a static shiny specific to the provided results. — exportStaticApp","text":"","code":"exportStaticApp(   result,   directory,   logo = \"ohdsi\",   title = \"\",   background = TRUE,   summary = TRUE,   panelDetails = panelDetailsFromResult(result),   panelStructure = as.list(names(panelDetails)),   theme = NULL,   open = rlang::is_interactive() )"},{"path":"https://ohdsi.github.io/OmopViewer/reference/exportStaticApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export and launch a static shiny specific to the provided results. — exportStaticApp","text":"result summarised_result object. directory Directory create shiny. logo Name logo path logo. NULL logo included. svg format allowed moment. title title shiny background Whether include background panel. Background panel content controlled generated background.md file. summary Whether include panel summary content `result`. panelDetails named list provide details one panels, : result_id, result_type, title, icon, filters content. default created using `panelDetailsFromResult()` function. panelStructure named list panel identifiers organise drop-menus. Identifiers names ones used `panelDetails`. default one panel per `panelDetails` element created. theme Specify theme Shiny application. can either select predefined theme provided package (e.g., `\"theme1\"`), define custom theme using `bslib::bs_theme()`. using custom theme, must provided character string (e.g., `\"bslib::bs_theme(bg = 'white', fg = 'black')\"`). open Whether open shiny app project.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/exportStaticApp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export and launch a static shiny specific to the provided results. — exportStaticApp","text":"shiny app created directory.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/exportStaticApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export and launch a static shiny specific to the provided results. — exportStaticApp","text":"","code":"exportStaticApp(   result = omopgenerics::emptySummarisedResult(),   directory = tempdir() ) #> ℹ Processing data #> ! No panels identified, generated shiny will be empty. #> ℹ Creating shiny from provided data #> ✔ Shiny created in: /tmp/Rtmp1KeZ8p/shiny"},{"path":"https://ohdsi.github.io/OmopViewer/reference/getPanel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get one of the default pre-built panels. — getPanel","title":"Get one of the default pre-built panels. — getPanel","text":"Get one default pre-built panels.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/getPanel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get one of the default pre-built panels. — getPanel","text":"","code":"getPanel(panelId)"},{"path":"https://ohdsi.github.io/OmopViewer/reference/getPanel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get one of the default pre-built panels. — getPanel","text":"panelId Name one default panels. Use `defaultPanels()` see available default panels.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/getPanel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get one of the default pre-built panels. — getPanel","text":"panel definition.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/getPanel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get one of the default pre-built panels. — getPanel","text":"","code":"getPanel(\"incidence\") #> Incidence (OmopViewer panel) #> • icon: chart-line #> • data: result_type: <incidence> #> • filters: 1 filters + 6 automatic filters #> • content: Test (DT); Table Incidence (gt); Plot Incidence (plot)"},{"path":"https://ohdsi.github.io/OmopViewer/reference/launchDynamicApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch a dynamic shiny app where you can upload results. — launchDynamicApp","title":"Launch a dynamic shiny app where you can upload results. — launchDynamicApp","text":"Launch dynamic shiny app can upload results.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/launchDynamicApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch a dynamic shiny app where you can upload results. — launchDynamicApp","text":"","code":"launchDynamicApp()"},{"path":"https://ohdsi.github.io/OmopViewer/reference/launchDynamicApp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch a dynamic shiny app where you can upload results. — launchDynamicApp","text":"Launches shiny app.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/omopViewerPanels.html","id":null,"dir":"Reference","previous_headings":"","what":"Panels defined in the package. — omopViewerPanels","title":"Panels defined in the package. — omopViewerPanels","text":"panels generated using following file: <https://github.com/OHDSI/OmopViewer/blob/main/data-raw/panels.R>.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/omopViewerPanels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Panels defined in the package. — omopViewerPanels","text":"","code":"omopViewerPanels"},{"path":"https://ohdsi.github.io/OmopViewer/reference/omopViewerPanels.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Panels defined in the package. — omopViewerPanels","text":"## `omopViewerPanels` list 26 `omopviewer_panel` obejcts:","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/omopViewerResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Mock results obtained from `GiBleed` dataset. — omopViewerResults","title":"Mock results obtained from `GiBleed` dataset. — omopViewerResults","text":"results generated using following file: <https://github.com/OHDSI/OmopViewer/blob/main/data-raw/results.R>.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/omopViewerResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mock results obtained from `GiBleed` dataset. — omopViewerResults","text":"","code":"omopViewerResults"},{"path":"https://ohdsi.github.io/OmopViewer/reference/omopViewerResults.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mock results obtained from `GiBleed` dataset. — omopViewerResults","text":"## `omopViewerResults` `summarised_result` object 12,017 rows:","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/panelDetailsFromResult.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain default panel details from a `<summarised_result>` object. — panelDetailsFromResult","title":"Obtain default panel details from a `<summarised_result>` object. — panelDetailsFromResult","text":"Obtain default panel details `<summarised_result>` object.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/panelDetailsFromResult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain default panel details from a `<summarised_result>` object. — panelDetailsFromResult","text":"","code":"panelDetailsFromResult(result)"},{"path":"https://ohdsi.github.io/OmopViewer/reference/panelDetailsFromResult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain default panel details from a `<summarised_result>` object. — panelDetailsFromResult","text":"result `summarised_result` object.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/panelDetailsFromResult.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain default panel details from a `<summarised_result>` object. — panelDetailsFromResult","text":"list `omop_viewer_panel` objects.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/panelDetailsFromResult.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain default panel details from a `<summarised_result>` object. — panelDetailsFromResult","text":"","code":"panelDetailsFromResult(omopViewerResults) #> $summarise_omop_snapshot #> Snapshot (OmopViewer panel) #> • icon: clipboard-list #> • data: result_type: <summarise_omop_snapshot> #> • filters: 1 filters + 1 automatic filters #> • content: Test (DT); Table Snapshot (gt) #>  #> $summarise_observation_period #> Observation period (OmopViewer panel) #> • icon: eye #> • data: result_type: <summarise_observation_period> #> • filters: 1 filters + 4 automatic filters #> • content: Test (DT); Table Observation period (gt); Plot Observation period #>   (plot) #>  #> $summarise_clinical_records #> Clinical records (OmopViewer panel) #> • icon: bars-staggered #> • data: result_type: <summarise_clinical_records> #> • filters: 1 filters + 6 automatic filters #> • content: Test (DT); Table Clinical records (gt) #>  #> $summarise_record_count #> Record count (OmopViewer panel) #> • icon: signal #> • data: result_type: <summarise_record_count> #> • filters: 1 filters + 6 automatic filters #> • content: Test (DT); Plot record count (plot) #>  #> $summarise_missing_data #> Missing data (OmopViewer panel) #> • icon: circle-exclamation #> • data: result_type: <summarise_missing_data> #> • filters: 1 filters + 6 automatic filters #> • content: Test (DT); Table Missing data (gt) #>  #> $summarise_in_observation #> In Observation (OmopViewer panel) #> • icon: explosion #> • data: result_type: <summarise_in_observation> #> • filters: 1 filters + 6 automatic filters #> • content: Test (DT); Plot in observation (plot) #>  #> $orphan_code_use #> Orphan codes (OmopViewer panel) #> • icon: magnifying-glass-arrow-right #> • data: result_type: <orphan_code_use> #> • filters: 1 filters + 4 automatic filters #> • content: Test (DT); Table Orphan codes (gt) #>  #> $cohort_code_use #> Cohort code use (OmopViewer panel) #> • icon: chart-column #> • data: result_type: <cohort_code_use> #> • filters: 1 filters + 4 automatic filters #> • content: Test (DT); Table Cohort code use (gt) #>  #> $code_use #> Code use (OmopViewer panel) #> • icon: chart-column #> • data: result_type: <code_use> #> • filters: 1 filters + 6 automatic filters #> • content: Test (DT); Table Code use (gt) #>  #> $achilles_code_use #> Achilles code use (OmopViewer panel) #> • icon: chart-column #> • data: result_type: <achilles_code_use> #> • filters: 1 filters + 6 automatic filters #> • content: Test (DT); Table Achilles code use (gt) #>  #> $unmapped_codes #> Unmapped codes (OmopViewer panel) #> • icon: chart-column #> • data: result_type: <unmapped_codes> #> • filters: 1 filters + 6 automatic filters #> • content: Test (DT); Table Unmapped codes (gt) #>  #> $summarise_cohort_overlap #> Cohort Overlap (OmopViewer panel) #> • icon: circle-half-stroke #> • data: result_type: <summarise_cohort_overlap> #> • filters: 1 filters + 5 automatic filters #> • content: Test (DT); Table Overlap (gt); Plot Overlap (plot) #>  #> $summarise_cohort_count #> Cohort Count (OmopViewer panel) #> • icon: users #> • data: result_type: <summarise_cohort_count> #> • filters: 1 filters + 4 automatic filters #> • content: Test (DT); Table Counts (gt); Plot Counts (plot) #>  #> $summarise_cohort_attrition #> Cohort Attrition (OmopViewer panel) #> • icon: layer-group #> • data: result_type: <summarise_cohort_attrition> #> • filters: 1 filters + 2 automatic filters #> • content: Test (DT); Table Attrition (gt); Diagram (grViz) #>  #> $summarise_cohort_timing #> Cohort Timing (OmopViewer panel) #> • icon: chart-simple #> • data: result_type: <summarise_cohort_timing> #> • filters: 1 filters + 2 automatic filters #> • content: Test (DT); Table Timing (gt); Plot Timing (plot) #>  #> $summarise_characteristics #> Cohort Characteristics (OmopViewer panel) #> • icon: users-gear #> • data: result_type: <summarise_characteristics> #> • filters: 1 filters + 4 automatic filters #> • content: Test (DT); Table Characteristics (gt); Plot Characteristics (plot) #>  #> $incidence #> Incidence (OmopViewer panel) #> • icon: chart-line #> • data: result_type: <incidence> #> • filters: 1 filters + 6 automatic filters #> • content: Test (DT); Table Incidence (gt); Plot Incidence (plot) #>  #> $incidence_attrition #> Incidence Attrition (OmopViewer panel) #> • icon: layer-group #> • data: result_type: <incidence_attrition> #> • filters: 1 filters + 2 automatic filters #> • content: Test (DT); Table Incidence Attrition (gt) #>  #> $prevalence #> Prevalence (OmopViewer panel) #> • icon: chart-column #> • data: result_type: <prevalence> #> • filters: 1 filters + 6 automatic filters #> • content: Test (DT); Table Prevalence (gt); Plot Prevalence (plot) #>  #> $prevalence_attrition #> Prevalence Attrition (OmopViewer panel) #> • icon: layer-group #> • data: result_type: <prevalence_attrition> #> • filters: 1 filters + 2 automatic filters #> • content: Test (DT); Table Prevalence Attrition (gt) #>  #> $summarise_dose_coverage #> Dose coverage (OmopViewer panel) #> • icon: pills #> • data: result_type: <summarise_dose_coverage> #> • filters: 1 filters + 6 automatic filters #> • content: Test (DT); Table Dose coverage (gt) #>  #> $summarise_proportion_of_patients_covered #> Proportion of patients covered (OmopViewer panel) #> • icon: chart-gantt #> • data: result_type: <summarise_proportion_of_patients_covered> #> • filters: 1 filters + 3 automatic filters #> • content: Test (DT); Table PPC (gt); Plot PPC (plot) #>  #> $summarise_drug_restart #> Drug Restart (OmopViewer panel) #> • icon: chart-gantt #> • data: result_type: <summarise_drug_restart> #> • filters: 1 filters + 3 automatic filters #> • content: Test (DT); Table Drug Restart (gt); Plot Drug Restart (plot) #>  #> $summarise_drug_utilisation #> Drug Utilisation (OmopViewer panel) #> • icon: capsules #> • data: result_type: <summarise_drug_utilisation> #> • filters: 1 filters + 6 automatic filters #> • content: Test (DT); Table Drug Utilisation (gt); Plot Drug Utilisation (plot) #>  #> $summarise_indication #> Indication (OmopViewer panel) #> • icon: disease #> • data: result_type: <summarise_indication> #> • filters: 1 filters + 6 automatic filters #> • content: Test (DT); Table Indication (gt); Plot Indication (plot) #>  #> $summarise_treatment #> Treatments (OmopViewer panel) #> • icon: disease #> • data: result_type: <summarise_treatment> #> • filters: 1 filters + 6 automatic filters #> • content: Test (DT); Table Treatments (gt); Plot Treatment (plot) #>"}]
