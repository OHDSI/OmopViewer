[{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://ohdsi.github.io/OmopViewer/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://ohdsi.github.io/OmopViewer/articles/background.html","id":"general-markdown-behaviour","dir":"Articles","previous_headings":"","what":"General markdown behaviour","title":"Edit the background panel of your shiny using `background.md`","text":"markdown part compiled using function markdown::markdownToHTML(), anything supported function can included markdown part. commonly used markdown functionalities : # titles ## subtitles ### third level titles, … ![](image.png) add images. Remember root folder ‘shiny/www/’ *...* italic text. **...** bold text. - bullet points. simple example: shiny contains information : B C ohdsi logo:","code":"# Introduction  This shiny *contains information* on:  - A - B - C  ## Images  The **ohdsi** logo: ![]('ohdsi_logo.svg'){width=100px}"},{"path":"https://ohdsi.github.io/OmopViewer/articles/background.html","id":"populate-yaml-part","dir":"Articles","previous_headings":"","what":"Populate yaml part","title":"Edit the background panel of your shiny using `background.md`","text":"can add metadata markdown using yaml top. need put metadata ---: yaml metadata can contain two types information: keywords add elements card. arguments bslib::card function.","code":"--- YAML CONTENT ---  BODY CONTENT"},{"path":"https://ohdsi.github.io/OmopViewer/articles/background.html","id":"keywords","dir":"Articles","previous_headings":"Populate yaml part","what":"Keywords","title":"Edit the background panel of your shiny using `background.md`","text":"following keywords can used edit bslib::card() content: Function column states function triggered. Let’s see add header footer card: bla bla bla bla…","code":"--- header: \"Card header\" footer: \"Some extra information\" --- # Introduction  bla bla bla bla..."},{"path":"https://ohdsi.github.io/OmopViewer/articles/background.html","id":"bslibcard-arguments","dir":"Articles","previous_headings":"Populate yaml part","what":"bslib::card() arguments","title":"Edit the background panel of your shiny using `background.md`","text":"can control arguments bslib::card() using metadata included yaml file. include metadata background.md file. can check documentation bslib::card(), supported arguments can populated using values (calls functions): full_screen height max_height min_height fill class id example: shiny contains information : B C Let’s see html can see id class populated:","code":"---- header: \"My custom card\" id: \"my_custom_id\" # this can be later used in the css class: \"my_custom_class\" # this can be later used in the css height: 100px ---- # Introduction  This shiny *contains information* on:  - A - B - C #> <div class=\"card bslib-card bslib-mb-spacing bslib-card-input html-fill-item html-fill-container my_custom_class\" data-bslib-card-init data-require-bs-caller=\"card()\" data-require-bs-version=\"5\" id=\"my_custom_id\" style=\"height:200px;\"> #>   <div class=\"card-header\">My custom card<\/div> #>   <div class=\"card-body bslib-gap-spacing html-fill-item html-fill-container\" style=\"margin-top:auto;margin-bottom:auto;flex:1 1 auto;\"><h1 id=\"introduction\">Introduction<\/h1> #> <p>This shiny <em>contains information<\/em> on:<\/p> #> <ul> #> <li>A<\/li> #> <li>B<\/li> #> <li>C<\/li> #> <\/ul> #> <\/div> #>   <script data-bslib-card-init>bslib.Card.initializeAllCards();<\/script> #> <\/div>"},{"path":"https://ohdsi.github.io/OmopViewer/articles/supported_result_type.html","id":"note-for-developers","dir":"Articles","previous_headings":"","what":"Note for developers","title":"Plot and tables in OmopViewer","text":"wish configure new result_type can done editing internal data: omopViewerTabs, omopViewerOutput omopViewerOutputArguments file internalData.R. Please feel free submit PR.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martí Català. Author, maintainer. Yuchen Guo. Author.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Català M, Guo Y (2024). OmopViewer: Visualise OMOP Results Shiny App. R package version 0.0.0.900, https://ohdsi.github.io/OmopViewer/.","code":"@Manual{,   title = {OmopViewer: Visualise OMOP Results in a Shiny App},   author = {Martí Català and Yuchen Guo},   year = {2024},   note = {R package version 0.0.0.900},   url = {https://ohdsi.github.io/OmopViewer/}, }"},{"path":"https://ohdsi.github.io/OmopViewer/index.html","id":"omopviewer","dir":"","previous_headings":"","what":"Visualise OMOP Results in a Shiny App","title":"Visualise OMOP Results in a Shiny App","text":"[!IMPORTANT] package construction just first Beta release, please use carefully report issue encounter using . goal OmopViewer allow user easily create Shiny Apps visualise study results <summarised_result> format.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Visualise OMOP Results in a Shiny App","text":"can install development version OmopViewer GitHub :","code":"install.packages(\"pak\") pak::pkg_install(\"OHDSI/OmopViewer\")"},{"path":"https://ohdsi.github.io/OmopViewer/index.html","id":"main-functionalities","dir":"","previous_headings":"","what":"Main functionalities","title":"Visualise OMOP Results in a Shiny App","text":"package can divided 3 main functionalities: - Static shiny app - Dynamic shiny app - Utility functions","code":"library(OmopViewer)"},{"path":"https://ohdsi.github.io/OmopViewer/index.html","id":"static-shiny-app","dir":"","previous_headings":"","what":"Static shiny app","title":"Visualise OMOP Results in a Shiny App","text":"static shiny app functionality creates static shiny list summarised_result objects. shiny specific set results can modified later locally.","code":"# lets generate some results library(CohortCharacteristics) cdm <- mockCohortCharacteristics() result <- summariseCharacteristics(cdm$cohort1) |>   bind(summariseCohortAttrition(cdm$cohort1)) #> ℹ adding demographics columns #> ℹ summarising data #> ✔ summariseCharacteristics finished!  exportStaticApp(result = result) #> ℹ Processing data #> ✔ Data processed: 2 result types idenfied: `summarise_characteristics` and #>   `summarise_cohort_attrition`. #> ℹ Creating shiny from provided data #> ✔ Shiny created in: C:/Users/martics/Documents/GitHub/omopViewer/shiny"},{"path":"https://ohdsi.github.io/OmopViewer/index.html","id":"dynamic-shiny-app","dir":"","previous_headings":"","what":"Dynamic shiny app","title":"Visualise OMOP Results in a Shiny App","text":"dynamic shiny app can easily launched launchDynamicApp() function. function creates shinyApp can upload multiple results sets visualise .","code":"launchDynamicApp()"},{"path":"https://ohdsi.github.io/OmopViewer/index.html","id":"utility-functions","dir":"","previous_headings":"","what":"Utility functions","title":"Visualise OMOP Results in a Shiny App","text":"tidyData experimental version tidy.summarised_result method defined visOmopResults. omopViewerTable experimental version visOmopTable function defined visOmopResults. filterData function used internally package subset result. meant user use. exported used exportStaticApp() function.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/OmopViewer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"OmopViewer: Visualise OMOP Results in a Shiny App — OmopViewer-package","title":"OmopViewer: Visualise OMOP Results in a Shiny App — OmopViewer-package","text":"Visualise results obtained analysing data mapped Observational Medical Outcomes Partnership (OMOP) common data model using Shiny Apps.","code":""},{"path":[]},{"path":"https://ohdsi.github.io/OmopViewer/reference/OmopViewer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"OmopViewer: Visualise OMOP Results in a Shiny App — OmopViewer-package","text":"Maintainer: Martí Català marti.catalasabate@ndorms.ox.ac.uk (ORCID) Authors: Yuchen Guo yuchen.guo@ndorms.ox.ac.uk (ORCID)","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/cardFromMd.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a `bslib::card()` object from a `.md` file. — cardFromMd","title":"Create a `bslib::card()` object from a `.md` file. — cardFromMd","text":"Create `bslib::card()` object `.md` file.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/cardFromMd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a `bslib::card()` object from a `.md` file. — cardFromMd","text":"","code":"cardFromMd(fileName)"},{"path":"https://ohdsi.github.io/OmopViewer/reference/cardFromMd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a `bslib::card()` object from a `.md` file. — cardFromMd","text":"fileName Name .md file.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/cardFromMd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a `bslib::card()` object from a `.md` file. — cardFromMd","text":"Ui `bslib::card` background details.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/cardSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a `bslib::card()` object from a `<summarised_result>` object. — cardSummary","title":"Create a `bslib::card()` object from a `<summarised_result>` object. — cardSummary","text":"Create `bslib::card()` object `<summarised_result>` object.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/cardSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a `bslib::card()` object from a `<summarised_result>` object. — cardSummary","text":"","code":"cardSummary(result)"},{"path":"https://ohdsi.github.io/OmopViewer/reference/cardSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a `bslib::card()` object from a `<summarised_result>` object. — cardSummary","text":"result `<summarised_result>` object.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/cardSummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a `bslib::card()` object from a `<summarised_result>` object. — cardSummary","text":"`bslib::card()` object.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/correctSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the strata, group and additional columns to settings with the tidyColumns (`visOmopResults::splitGroup()`, `visOmopResults::splitStrata()`, `visOmopResults::splitAdditional()`) for each 'result_id'. — correctSettings","title":"Add the strata, group and additional columns to settings with the tidyColumns (`visOmopResults::splitGroup()`, `visOmopResults::splitStrata()`, `visOmopResults::splitAdditional()`) for each 'result_id'. — correctSettings","text":"Add strata, group additional columns settings tidyColumns (`visOmopResults::splitGroup()`, `visOmopResults::splitStrata()`, `visOmopResults::splitAdditional()`) 'result_id'.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/correctSettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the strata, group and additional columns to settings with the tidyColumns (`visOmopResults::splitGroup()`, `visOmopResults::splitStrata()`, `visOmopResults::splitAdditional()`) for each 'result_id'. — correctSettings","text":"","code":"correctSettings(result)"},{"path":"https://ohdsi.github.io/OmopViewer/reference/correctSettings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the strata, group and additional columns to settings with the tidyColumns (`visOmopResults::splitGroup()`, `visOmopResults::splitStrata()`, `visOmopResults::splitAdditional()`) for each 'result_id'. — correctSettings","text":"result `<summarised_result>` object.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/exportStaticApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Export and launch a static shiny specific to the provided results. — exportStaticApp","title":"Export and launch a static shiny specific to the provided results. — exportStaticApp","text":"Export launch static shiny specific provided results.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/exportStaticApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export and launch a static shiny specific to the provided results. — exportStaticApp","text":"","code":"exportStaticApp(   result,   logo = \"ohdsi\",   title = \"\",   background = TRUE,   summary = TRUE,   directory = getwd(),   panels = list(),   theme = NULL,   open = rlang::is_interactive() )"},{"path":"https://ohdsi.github.io/OmopViewer/reference/exportStaticApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export and launch a static shiny specific to the provided results. — exportStaticApp","text":"result summarised_result object. logo Name logo path logo. NULL logo included. svg format allowed moment. title title shiny background Whether include background panel. Background panel content controlled generated background.md file. summary Whether include panel summary content `result`. directory Directory create shiny. panels List specifying order results. panel determined available result types result object. Panels available results specified included specified result tabs. theme Assign theme shiny app using bslib::bs_theme() open Whether open shiny app project.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/exportStaticApp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export and launch a static shiny specific to the provided results. — exportStaticApp","text":"shiny app created directory.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/exportStaticApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export and launch a static shiny specific to the provided results. — exportStaticApp","text":"","code":"{ exportStaticApp(   result = emptySummarisedResult(),   theme = \"bslib::bs_theme(bg = '#bb0a1e', fg = '#0000ff')\" ) } #> ℹ Processing data #> ! No result_type(s) found, the generated shiny will be empty. #> ℹ Creating shiny from provided data #> ✔ Shiny created in: #>   /home/runner/work/OmopViewer/OmopViewer/docs/reference/shiny"},{"path":"https://ohdsi.github.io/OmopViewer/reference/filterData.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is used to filter data in shinys that inputs are defined following. — filterData","title":"This function is used to filter data in shinys that inputs are defined following. — filterData","text":"function used filter data shinys inputs defined following.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/filterData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is used to filter data in shinys that inputs are defined following. — filterData","text":"","code":"filterData(result, resultType, input)"},{"path":"https://ohdsi.github.io/OmopViewer/reference/filterData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function is used to filter data in shinys that inputs are defined following. — filterData","text":"result summarised_result object. resultType resultType interest filter . input Input shiny filter .","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/filterData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function is used to filter data in shinys that inputs are defined following. — filterData","text":"filtered result.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/getChoices.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the different options that a summarised_result have. — getChoices","title":"Get the different options that a summarised_result have. — getChoices","text":"Get different options summarised_result .","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/getChoices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the different options that a summarised_result have. — getChoices","text":"","code":"getChoices(result, flatten = FALSE)"},{"path":"https://ohdsi.github.io/OmopViewer/reference/getChoices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the different options that a summarised_result have. — getChoices","text":"result `<summarised_result>` object. flatten Whether flatten single list .","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/getChoices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the different options that a summarised_result have. — getChoices","text":"named list options","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/getChoices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the different options that a summarised_result have. — getChoices","text":"","code":"library(CohortCharacteristics)  cdm <- mockCohortCharacteristics() #> Note: method with signature ‘DBIConnection#Id’ chosen for function ‘dbExistsTable’, #>  target signature ‘duckdb_connection#Id’. #>  \"duckdb_connection#ANY\" would also be valid  result <- cdm$cohort1 |>   summariseCharacteristics() #> ℹ adding demographics columns #> ℹ summarising data #> ✔ summariseCharacteristics finished!  getChoices(result) #> $summarise_characteristics #> $summarise_characteristics$settings #> $summarise_characteristics$settings$table_name #> [1] \"cohort1\" #>  #>  #> $summarise_characteristics$grouping #> $summarise_characteristics$grouping$cdm_name #> [1] \"PP_MOCK\" #>  #> $summarise_characteristics$grouping$cohort_name #> [1] \"cohort_1\" \"cohort_2\" \"cohort_3\" #>  #>  #> $summarise_characteristics$variable_name #> [1] \"Age\"                \"Cohort end date\"    \"Cohort start date\"  #> [4] \"Days in cohort\"     \"Future observation\" \"Number records\"     #> [7] \"Number subjects\"    \"Prior observation\"  \"Sex\"                #>  #> $summarise_characteristics$estimate_name #> [1] \"count\"      \"max\"        \"mean\"       \"median\"     \"min\"        #> [6] \"percentage\" \"q25\"        \"q75\"        \"sd\"         #>  #> $summarise_characteristics$tidy_columns #> [1] \"cdm_name\"    \"cohort_name\" \"table_name\"  #>  #>"},{"path":"https://ohdsi.github.io/OmopViewer/reference/launchDynamicApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch a dynamic shiny app where you can upload results. — launchDynamicApp","title":"Launch a dynamic shiny app where you can upload results. — launchDynamicApp","text":"Launch dynamic shiny app can upload results.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/launchDynamicApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch a dynamic shiny app where you can upload results. — launchDynamicApp","text":"","code":"launchDynamicApp()"},{"path":"https://ohdsi.github.io/OmopViewer/reference/launchDynamicApp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch a dynamic shiny app where you can upload results. — launchDynamicApp","text":"Launches shiny app.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/omopViewerTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a formatted gt table. — omopViewerTable","title":"Create a formatted gt table. — omopViewerTable","text":"Create formatted gt table.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/omopViewerTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a formatted gt table. — omopViewerTable","text":"","code":"omopViewerTable(   result,   header = character(),   group = character(),   hide = character() )"},{"path":"https://ohdsi.github.io/OmopViewer/reference/omopViewerTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a formatted gt table. — omopViewerTable","text":"result tibble must contain least two columns: estimate_value estimate_type. header Column names move header, must columns result. group Column names group , must columns result. hide Column names hide, must columns result.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/omopViewerTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a formatted gt table. — omopViewerTable","text":"gt table.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. omopgenerics emptySummarisedResult, exportSummarisedResult, importSummarisedResult","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/tidyData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a tidy tibble from a `summarised_result` object. — tidyData","title":"Get a tidy tibble from a `summarised_result` object. — tidyData","text":"Get tidy tibble `summarised_result` object.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/tidyData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a tidy tibble from a `summarised_result` object. — tidyData","text":"","code":"tidyData(result)"},{"path":"https://ohdsi.github.io/OmopViewer/reference/tidyData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a tidy tibble from a `summarised_result` object. — tidyData","text":"result `summarised_result` object.","code":""},{"path":"https://ohdsi.github.io/OmopViewer/reference/tidyData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a tidy tibble from a `summarised_result` object. — tidyData","text":"tibble.","code":""}]
