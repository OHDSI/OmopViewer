[{"path":"https://oxford-pharmacoepi.github.io/omopViewer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/articles/supported_result_type.html","id":"note-for-developers","dir":"Articles","previous_headings":"","what":"Note for developers","title":"Plot tabs in omopViewer","text":"exist default design “unconfigured” result_type wish configure new result_type can done editing internal data: omopViewerTabs, omopViewerPlots omopViewerPlotArguments file internalData.R. Please feel free submit PR.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martí Català. Author, maintainer. Yuchen Guo. Author.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Català M, Guo Y (2024). omopViewer: Visualise OMOP Results Shiny App. R package version 0.0.0.900, https://oxford-pharmacoepi.github.io/omopViewer/.","code":"@Manual{,   title = {omopViewer: Visualise OMOP Results in a Shiny App},   author = {Martí Català and Yuchen Guo},   year = {2024},   note = {R package version 0.0.0.900},   url = {https://oxford-pharmacoepi.github.io/omopViewer/}, }"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/index.html","id":"omopviewer","dir":"","previous_headings":"","what":"Visualise OMOP Results in a Shiny App","title":"Visualise OMOP Results in a Shiny App","text":"WARNING: package construction user use yet. goal omopViewer allow user easily create interactive Shiny Apps.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Visualise OMOP Results in a Shiny App","text":"can install development version omopViewer GitHub :","code":"install.packages(\"pak\") pak::pkg_install(\"oxford-pharmacoepi/omopViewer\")"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/index.html","id":"main-functionalities","dir":"","previous_headings":"","what":"Main functionalities","title":"Visualise OMOP Results in a Shiny App","text":"package can divided 3 main functionalities: - Dynamic shiny app - Static shiny app - Utility functions","code":"library(omopViewer)"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/index.html","id":"dynamic-shiny-app","dir":"","previous_headings":"","what":"Dynamic shiny app","title":"Visualise OMOP Results in a Shiny App","text":"dynamic shiny app can easily launched launchDynamicApp() function. function creates shinyApp can upload multiple results sets visualise .","code":"launchDynamicApp()"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/index.html","id":"static-shiny-app","dir":"","previous_headings":"","what":"Static shiny app","title":"Visualise OMOP Results in a Shiny App","text":"static shiny app functionality creates static shiny list summarised_result objects. shiny specific set results can modified later locally.","code":"# lets generate some results library(CohortCharacteristics) cdm <- mockCohortCharacteristics() #> Note: method with signature 'DBIConnection#Id' chosen for function 'dbExistsTable', #>  target signature 'duckdb_connection#Id'. #>  \"duckdb_connection#ANY\" would also be valid #> ! cohort columns will be reordered to match the expected order: #>   cohort_definition_id, subject_id, cohort_start_date, and cohort_end_date. #> ! cohort columns will be reordered to match the expected order: #>   cohort_definition_id, subject_id, cohort_start_date, and cohort_end_date. result <- cdm$cohort1 |>   summariseCharacteristics() |>   omopgenerics::bind( # should be reexported by CohortCharacteristics     cdm$cohort1 |>       summariseCohortAttrition()   ) #> ℹ adding demographics columns #> ℹ summarising data #> ✔ summariseCharacteristics finished!  exportStaticApp(data = result) #> ℹ Processing data #> ✔ Data processed: 2 result types idenfied: `summarised_characteristics` and #>   `cohort_attrition`. #> ℹ Creating shiny from provided data #> Warning in dir.create(paste0(directory, \"/data\"), recursive = TRUE): #> '/Users/martics/Documents/GitHub/omopViewer/shiny/data' already exists #> ✔ Shiny created in: /Users/martics/Documents/GitHub/omopViewer/shiny"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/index.html","id":"utility-functions","dir":"","previous_headings":"","what":"Utility functions","title":"Visualise OMOP Results in a Shiny App","text":"functions used inside static shiny app.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/aboutTab.html","id":null,"dir":"Reference","previous_headings":"","what":"Code for the tab 'about'. — aboutTab","title":"Code for the tab 'about'. — aboutTab","text":"Code tab ''.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/aboutTab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code for the tab 'about'. — aboutTab","text":"","code":"aboutTab()"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/aboutTab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code for the tab 'about'. — aboutTab","text":"html code tab.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/applyFilters.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Filters to a Data Frame — applyFilters","title":"Apply Filters to a Data Frame — applyFilters","text":"function filters data frame based specified columns input values.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/applyFilters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Filters to a Data Frame — applyFilters","text":"","code":"applyFilters(df, input, ns, cols_to_filter)"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/applyFilters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Filters to a Data Frame — applyFilters","text":"df data frame filtered. input Shiny input object containing filter values. ns Namespace function module. cols_to_filter vector column names filtered.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/applyFilters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Filters to a Data Frame — applyFilters","text":"filtered data frame.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/bindData.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind a list of data.frames into a single summarised_result object. — bindData","title":"Bind a list of data.frames into a single summarised_result object. — bindData","text":"Bind list data.frames single summarised_result object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/bindData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind a list of data.frames into a single summarised_result object. — bindData","text":"","code":"bindData(data)"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/bindData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind a list of data.frames into a single summarised_result object. — bindData","text":"data data.frame list data.frames.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/bindData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind a list of data.frames into a single summarised_result object. — bindData","text":"summarised_result object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/createCard.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap Card with Collapsible Content for a Shiny Dashboard — createCard","title":"Create a Bootstrap Card with Collapsible Content for a Shiny Dashboard — createCard","text":"function generates Bootstrap card collapsible header content. content includes UI elements settings, filters, tables, optional extra UI element can displayed separate tab.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/createCard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap Card with Collapsible Content for a Shiny Dashboard — createCard","text":"","code":"createCard(id, title, setting_filter_ui, filter_ui, table_ui, extra_ui = NULL)"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/createCard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap Card with Collapsible Content for a Shiny Dashboard — createCard","text":"id ID collapsible card element. title title displayed card header. setting_filter_ui UI element settings filter. filter_ui UI element filter. table_ui UI element table. extra_ui Optional UI element additional content, plot (default NULL).","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/createCard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Bootstrap Card with Collapsible Content for a Shiny Dashboard — createCard","text":"`div` element containing card structure use Shiny UI.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/createCard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap Card with Collapsible Content for a Shiny Dashboard — createCard","text":"","code":"if (FALSE) { # \\dontrun{ createCard(   id = \"example_card\",   title = \"Example Card\",   setting_filter_ui = selectInput(\"setting\", \"Setting\", choices = c(\"A\", \"B\")),   filter_ui = selectInput(\"filter\", \"Filter\", choices = c(\"X\", \"Y\")),   table_ui = DT::dataTableOutput(\"example_table\"),   extra_ui = plotOutput(\"example_plot\") ) } # }"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/createDynamicTabs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Dynamic Tabs for a Shiny Dashboard — createDynamicTabs","title":"Create Dynamic Tabs for a Shiny Dashboard — createDynamicTabs","text":"function dynamically generates Shiny tabItems dashboard based supplied data complete incomplete datasets. configures tabs differently depending completeness data available plot configurations.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/createDynamicTabs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Dynamic Tabs for a Shiny Dashboard — createDynamicTabs","text":"","code":"createDynamicTabs(complete_data, incomplete_data, plot_config, session)"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/createDynamicTabs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Dynamic Tabs for a Shiny Dashboard — createDynamicTabs","text":"complete_data dataframe containing complete data necessary columns. incomplete_data list data frames, representing incomplete data. plot_config dataframe mapping plot types module UIs rendering specific visualizations. session current Shiny session object maintain session-specific reactive values.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/createDynamicTabs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Dynamic Tabs for a Shiny Dashboard — createDynamicTabs","text":"Returns list `shiny::tabItem` objects can added Shiny dashboard.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/exportStaticApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Export and launch a static shiny specific to the provided results. — exportStaticApp","title":"Export and launch a static shiny specific to the provided results. — exportStaticApp","text":"Export launch static shiny specific provided results.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/exportStaticApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export and launch a static shiny specific to the provided results. — exportStaticApp","text":"","code":"exportStaticApp(   result = omopgenerics::emptySummarisedResult(),   directory = getwd(),   open = rlang::is_interactive() )"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/exportStaticApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export and launch a static shiny specific to the provided results. — exportStaticApp","text":"result summarised_result object. directory Directory create shiny. open Whether open shiny app project.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/exportStaticApp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export and launch a static shiny specific to the provided results. — exportStaticApp","text":"shiny app created directory.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/filterData.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is used to filter data in shinys that inputs are defined following. — filterData","title":"This function is used to filter data in shinys that inputs are defined following. — filterData","text":"function used filter data shinys inputs defined following.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/filterData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is used to filter data in shinys that inputs are defined following. — filterData","text":"","code":"filterData(result, resultType, input)"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/filterData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function is used to filter data in shinys that inputs are defined following. — filterData","text":"result summarised_result object. resultType resultType interest filter . input Input shiny filter .","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/filterData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function is used to filter data in shinys that inputs are defined following. — filterData","text":"filtered result.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/filterSettingInitServer.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize Server Logic for Shiny Module — filterSettingInitServer","title":"Initialize Server Logic for Shiny Module — filterSettingInitServer","text":"function initializes server logic Shiny module creates dynamic filters displays filtered data table.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/filterSettingInitServer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize Server Logic for Shiny Module — filterSettingInitServer","text":"","code":"filterSettingInitServer(id, dataset, global_store)"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/filterSettingInitServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize Server Logic for Shiny Module — filterSettingInitServer","text":"id module id. dataset reactive expression returns dataset used. global_store reactive value function store unique result IDs.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/filterSettingUi.html","id":null,"dir":"Reference","previous_headings":"","what":"Table UI Function — filterSettingUi","title":"Table UI Function — filterSettingUi","text":"function creates UI Shiny module includes dynamic filters data table.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/filterSettingUi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table UI Function — filterSettingUi","text":"","code":"filterSettingUi(id)"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/filterSettingUi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table UI Function — filterSettingUi","text":"id module id.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/genericServer.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic server function that uses the plot_config to handle plotting and UI updates — genericServer","title":"Generic server function that uses the plot_config to handle plotting and UI updates — genericServer","text":"Generic server function uses plot_config handle plotting UI updates","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/genericServer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic server function that uses the plot_config to handle plotting and UI updates — genericServer","text":"","code":"genericServer(id, moduleType, dataset, filter_input)"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/genericServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic server function that uses the plot_config to handle plotting and UI updates — genericServer","text":"id string uniquely identifies module instance. moduleType string specifying type module, corresponds keys `plot_config` define plots UI elements handled. dataset reactive expression function returns dataset used. dataset expected processed dynamically based user input. filter_input reactive expression function returns user-selected filters apply dataset.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/genericServer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic server function that uses the plot_config to handle plotting and UI updates — genericServer","text":"Shiny module server function, can use omopViewer add functionality specified module types shiny","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/genericServer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic server function that uses the plot_config to handle plotting and UI updates — genericServer","text":"`genericServer` function facilitates creation modular plot components Shiny application, allowing scalable maintainable code. processes data using predefined settings, applies user filters, updates UI dynamically based available data attributes, manages rendering plots downloading plot images. function highly dependent `plot_config` configuration list, must predefined include details plotting function use , UI elements dynamically generate, specific IDs updating UI components (`updatePickerInputIDs`).","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/genericUI.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic UI Function for Dynamic Plot Modules — genericUI","title":"Generic UI Function for Dynamic Plot Modules — genericUI","text":"Generic UI Function Dynamic Plot Modules","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/genericUI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic UI Function for Dynamic Plot Modules — genericUI","text":"","code":"genericUI(id, moduleType)"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/genericUI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic UI Function for Dynamic Plot Modules — genericUI","text":"id string uniquely identifies UI instance namespacing elements. moduleType string specifying type module, dictates UI elements generate defined `plot_config`.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/genericUI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic UI Function for Dynamic Plot Modules — genericUI","text":"Shiny UI definition can integrated application layout.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/genericUI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic UI Function for Dynamic Plot Modules — genericUI","text":"`genericUI` function supports creating flexible, dynamic user interface Shiny application, aligning modular design dictated `plot_config`. automatically generates UI components picker inputs facets, colours, configurable options, well output slots plots download buttons.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/launchDynamicApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch a dynamic shiny app wher you can upload results. — launchDynamicApp","title":"Launch a dynamic shiny app wher you can upload results. — launchDynamicApp","text":"Launch dynamic shiny app wher can upload results.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/launchDynamicApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch a dynamic shiny app wher you can upload results. — launchDynamicApp","text":"","code":"launchDynamicApp()"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/launchDynamicApp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch a dynamic shiny app wher you can upload results. — launchDynamicApp","text":"Launches shiny app.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/omopViewer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"omopViewer: Visualise OMOP Results in a Shiny App — omopViewer-package","title":"omopViewer: Visualise OMOP Results in a Shiny App — omopViewer-package","text":"Visualise results obtained analysing data mapped Observational Medical Outcomes Partnership (OMOP) common data model using Shiny Apps.","code":""},{"path":[]},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/omopViewer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"omopViewer: Visualise OMOP Results in a Shiny App — omopViewer-package","text":"Maintainer: Martí Català marti.catalasabate@ndorms.ox.ac.uk (ORCID) Authors: Yuchen Guo yuchen.guo@ndorms.ox.ac.uk (ORCID)","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. omopgenerics importSummarisedResult","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/serverDynamic.html","id":null,"dir":"Reference","previous_headings":"","what":"Server Function for Shiny Application — serverDynamic","title":"Server Function for Shiny Application — serverDynamic","text":"function contains server logic Shiny application designed manage display data studies. handles file uploads, data processing, UI updates based data state.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/serverDynamic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server Function for Shiny Application — serverDynamic","text":"","code":"serverDynamic(input, output, session)"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/serverDynamic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server Function for Shiny Application — serverDynamic","text":"input Standard Shiny server input parameter output Standard Shiny server output parameter session Standard Shiny session parameter","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/serverDynamic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server Function for Shiny Application — serverDynamic","text":"function sets series reactive expressions   observers manage app state.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/serverStatic.html","id":null,"dir":"Reference","previous_headings":"","what":"Provides the static server of the shiny app for a given set of resultType(s). — serverStatic","title":"Provides the static server of the shiny app for a given set of resultType(s). — serverStatic","text":"Provides static server shiny app given set resultType(s).","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/serverStatic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provides the static server of the shiny app for a given set of resultType(s). — serverStatic","text":"","code":"serverStatic(result = omopgenerics::emptySummarisedResult(), asText = FALSE)"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/serverStatic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provides the static server of the shiny app for a given set of resultType(s). — serverStatic","text":"result summarised_result object. asText Whether output text object eval .","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/serverStatic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provides the static server of the shiny app for a given set of resultType(s). — serverStatic","text":"server interest.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/splitBySettings.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a summarised_result object by a set of setting columns. — splitBySettings","title":"Split a summarised_result object by a set of setting columns. — splitBySettings","text":"Split summarised_result object set setting columns.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/splitBySettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a summarised_result object by a set of setting columns. — splitBySettings","text":"","code":"splitBySettings(data, columns, collapse = \" & \")"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/splitBySettings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a summarised_result object by a set of setting columns. — splitBySettings","text":"data summarised_result object. columns Set columns split summarised_result object . collapse Character collapse names.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/splitBySettings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a summarised_result object by a set of setting columns. — splitBySettings","text":"list summarised_result objects splitted `columns`.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/studySelectInitServer.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize the Study Selection Module Server — studySelectInitServer","title":"Initialize the Study Selection Module Server — studySelectInitServer","text":"function initializes server-side logic study selection module.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/studySelectInitServer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize the Study Selection Module Server — studySelectInitServer","text":"","code":"studySelectInitServer(id)"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/studySelectInitServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize the Study Selection Module Server — studySelectInitServer","text":"id string. namespace identifier module.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/studySelectInitServer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize the Study Selection Module Server — studySelectInitServer","text":"Initialise study select module","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/studySelectServer.html","id":null,"dir":"Reference","previous_headings":"","what":"Server function for the Study Selection Module — studySelectServer","title":"Server function for the Study Selection Module — studySelectServer","text":"function contains server-side logic study selection module.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/studySelectServer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server function for the Study Selection Module — studySelectServer","text":"","code":"studySelectServer(input, output, session)"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/studySelectServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server function for the Study Selection Module — studySelectServer","text":"input Shiny server input. output Shiny server output. session Shiny server session.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/studySelectServer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server function for the Study Selection Module — studySelectServer","text":"list reactive expression returns selected study.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/studySelectUi.html","id":null,"dir":"Reference","previous_headings":"","what":"UI function for the Study Selection Module — studySelectUi","title":"UI function for the Study Selection Module — studySelectUi","text":"function creates UI components study selection module.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/studySelectUi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UI function for the Study Selection Module — studySelectUi","text":"","code":"studySelectUi(id)"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/studySelectUi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UI function for the Study Selection Module — studySelectUi","text":"id string. namespace identifier module.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/studySelectUi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UI function for the Study Selection Module — studySelectUi","text":"UI definition select uploaded study","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/tidyData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a tidy tibble from a `summarised_result` object. — tidyData","title":"Get a tidy tibble from a `summarised_result` object. — tidyData","text":"Get tidy tibble `summarised_result` object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/tidyData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a tidy tibble from a `summarised_result` object. — tidyData","text":"","code":"tidyData(   result,   showSettings = TRUE,   showGroupping = TRUE,   prefixSet = \"\",   prefixGroup = \"\",   pivotEstimates = FALSE )"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/tidyData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a tidy tibble from a `summarised_result` object. — tidyData","text":"result `summarised_result` object. showSettings Whether show settings columns. showGroupping Whether show groupping columns. prefixSet Prefix settings columns. prefixGroup Prefix groupping columns. pivotEstimates Whether pivot estimates.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/tidyData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a tidy tibble from a `summarised_result` object. — tidyData","text":"tibble.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/uiDynamic.html","id":null,"dir":"Reference","previous_headings":"","what":"Provides the dynamic UI of the shiny app. — uiDynamic","title":"Provides the dynamic UI of the shiny app. — uiDynamic","text":"Provides dynamic UI shiny app.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/uiDynamic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provides the dynamic UI of the shiny app. — uiDynamic","text":"","code":"uiDynamic()"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/uiDynamic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provides the dynamic UI of the shiny app. — uiDynamic","text":"ui interest.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/uiStatic.html","id":null,"dir":"Reference","previous_headings":"","what":"Provides the static UI of the shiny app for a given set of resultType(s). — uiStatic","title":"Provides the static UI of the shiny app for a given set of resultType(s). — uiStatic","text":"Provides static UI shiny app given set resultType(s).","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/uiStatic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provides the static UI of the shiny app for a given set of resultType(s). — uiStatic","text":"","code":"uiStatic(result = omopgenerics::emptySummarisedResult(), asText = FALSE)"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/uiStatic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provides the static UI of the shiny app for a given set of resultType(s). — uiStatic","text":"result summarised_result object. asText Whether output text object eval .","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/uiStatic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provides the static UI of the shiny app for a given set of resultType(s). — uiStatic","text":"ui interest.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/uploadDataInitServer.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload Data Server Logic — uploadDataInitServer","title":"Upload Data Server Logic — uploadDataInitServer","text":"function contains server-side logic processing uploads.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/uploadDataInitServer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload Data Server Logic — uploadDataInitServer","text":"","code":"uploadDataInitServer(id, dataFolder)"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/uploadDataInitServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload Data Server Logic — uploadDataInitServer","text":"id unique identifier Shiny module dataFolder folder path save uploaded data","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/uploadDataUi.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload Data UI Component — uploadDataUi","title":"Upload Data UI Component — uploadDataUi","text":"function creates UI component uploading data files.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/uploadDataUi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload Data UI Component — uploadDataUi","text":"","code":"uploadDataUi(id)"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/uploadDataUi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload Data UI Component — uploadDataUi","text":"id unique identifier Shiny module","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/uploadDataUi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload Data UI Component — uploadDataUi","text":"UI definition use Shiny application.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/visTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a formatted gt table. — visTable","title":"Create a formatted gt table. — visTable","text":"Create formatted gt table.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/visTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a formatted gt table. — visTable","text":"","code":"visTable(result, header = character(), group = character(), hide = character())"},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/visTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a formatted gt table. — visTable","text":"result tibble must contain least two columns: estimate_value estimate_type. header Column names move header, must columns result. group Column names group , must columns result. hide Column names hide, must columns result.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omopViewer/reference/visTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a formatted gt table. — visTable","text":"gt table.","code":""}]
