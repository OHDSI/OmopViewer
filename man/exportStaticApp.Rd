% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/appStatic.R
\name{exportStaticApp}
\alias{exportStaticApp}
\title{Export and launch a static shiny specific to the provided results.}
\usage{
exportStaticApp(
  result,
  logo = "ohdsi",
  title = "",
  background = NULL,
  summary = TRUE,
  directory = getwd(),
  panels = list(),
  open = rlang::is_interactive(),
  theme = NULL
)
}
\arguments{
\item{result}{A summarised_result object.}

\item{logo}{Name of a logo or path to a logo. If NULL no logo is included.
Only svg format allowed for the moment.}

\item{title}{title of the shiny}

\item{background}{Content to fill the background panel. If `NULL`, this panel
will not appear in the Shiny UI. This argument can be populated in two ways:
1) A character string containing `bslib` code to go directly inside
`bslib::card()`.
2) A named character vector where the names correspond to specific`bslib`
card elements: "header", "title", "subtitle", "body", and "footer". Each
element's name indicates the type of text it will fill. The order of these
elements is important when displaying the content. Markdown sythax for text
styling is supported.}

\item{summary}{Whether to include a panel with a summary of content in the
`result`.}

\item{directory}{Directory to create the shiny.}

\item{panels}{List specifying order of results. Each panel is determined
by the available result types in the result object. Panels for any available
results not specified will be included after the specified result tabs.}

\item{open}{Whether to open the shiny app project.}

\item{theme}{Assign a theme to the shiny app using bslib::bs_theme()}
}
\value{
The shiny app will be created in directory.
}
\description{
Export and launch a static shiny specific to the provided results.
}
\examples{
{
tdir <- here::here()
exportStaticApp(result = omopgenerics::emptySummarisedResult(), directory = tdir, logo = NULL, theme = "bslib::bs_theme(bg = \"#bb0a1e\", fg = \"#0000ff\")")
}

}
